openapi: 3.0.0
servers:
  - url: https://api.alcmeon.com/
    description: Production api server
info:
  title: Custom Fields
  version: '1.0'

x-readme:
  explorer-enabled: false

security:
  - basic_auth: []

components:
  securitySchemes:
    basic_auth:
      description: >
        This is the default authentication schema for api.alcmeon.com.
        The username is your `company_id` (the id of your environment within Alcméon).
        The password is available from the _Applications_ configuration page within Alcméon.
      type: http
      scheme: basic

  schemas:
    PrimitiveFieldValues:
      oneOf:
        - type: integer
          description: When the field is of type integer
        - type: number
          description: When the field is of type float
        - type: string
          description: When the field is of type string
        - type: string
          format: uri
          description: When the field is of type url
        - type: string
          format: email
          description: When the field is of type email
        - type: string
          format: date-time
          description: When the field is of type datetime
        - type: string
          format: date
          description: When the field is of type date
        - type: boolean
          description: When the field is of type boolean
        - type: string
          format: uuid
          description: When the field is of type enum
        - $ref: '#/components/schemas/MultiPickListFieldValue'
        - $ref: '#/components/schemas/PhoneFieldValue'

    PhoneFieldValue:
      description: When the field is of type Phone
      type: object
      properties:
        country_prefix:
          type: string
        number:
          type: string

    MultiPickListFieldValue:
      description: When the field is of type multi-picklist
      type: array
      items:
        type: string
        format: uuid

    FieldValues:
      description: A list of field/value pairs
      type: array
      items:
        type: object
        description: A value for a specific field
        properties:
          field_id:
            type: integer
          field_value:
            $ref: '#/components/schemas/PrimitiveFieldValues'

    ResponseError:
      type: object
      properties:
        error:
          type: string
          description: A short string explaining the reason of the error.
        details:
          type: string
          description: >
            A short string which describes what is wrong. Provide this string to 
            support@alcmeon.com if you wish to obtain more details about the problem.

    FieldMetadata:
      description: Metadata for custom fields
      type: object
      properties:
        id:
          type: integer
          description: Id of the custom field
        label:
          type: string
          description: Label of the custom field
        description:
          type: string
          description: Description of the custom field
        type:
          type: string
          enum: [integer, float, boolean, enum, multipicklist, string, url, phone, email, datetime, date]
        teams:
          type: array
          description: id of the teams that can view/edit the custom field. See [/teams](#https://developers.alcmeon.com/reference/get_teams)
          items:
            type: integer
        optional:
          type: boolean
          description: If true, this custom field is optional
        allowed:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              label:
                type: string
          description: List of allowed values. Only return if the type is 'multipicklist' or 'enum'
        last_updater_admin_user_email:
          type: string
          description: Email address of the last modifier
        last_modified_on:
          type: string
          format: date-time
          description: Last datetime of edition? ISO format in GMT



    ResponseOk:
      type: string
      enum: ['ok']

paths:
  /custom-field/users/{custom_field_user_id}:
    parameters:
      - in: path
        name: custom_field_user_id
        description: A custom_field_user_id which uniquely identifies a user.
        required: true
        schema:
          type: integer
    put:
      tags:
        - User
      summary: Set fields for a user profile
      description: >
        Set user custom fields for a user profile.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldValues'
      responses:
        '200':
          description: Returned upon succes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOk'
        '400':
          description: Returned if the request body format is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Returned if a field is not editable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '404':
          description: Returned if the user profile is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    get:
      tags:
        - User
      summary: Get fields for a user profile
      description: >
        Return user custom fields for a user profile.
      responses:
        '200':
          description: Returned upon succes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldValues'

  /custom-field/accounts/{social_media_account_id}/users/{social_media_user_id}:
    parameters:
      - in: path
        name: social_media_account_id
        description: >
          An id which uniquely identifies a social media account.
        required: true
        schema:
          type: integer
      - in: path
        name: social_media_user_id
        description: >
          The id uniquely identifying the user within the social media account.
          On Whatsapp, this is the user's phone number, in international format, without a leading +.
          For example a french phone number in this format will look like this 33672422826 
          (33 is the international prefix).
        required: true
        schema:
          type: string
    put:
      tags:
        - User
      summary: >
        Set fields for a social media user
      description: >
        Set user custom fields for a given social media user.
        
        > NB: the social media user is created if not found for this social media account.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldValues'
      responses:
        '200':
          description: Returned upon succes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOk'
        '400':
          description: Returned if the request body format is invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
        '403':
          description: Returned if a field is not editable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
    get:
      tags:
        - User
      summary: Get fields for a social media user
      description: >
        Return user custom fields for a social media user.
      responses:
        '200':
          description: Returned upon succes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldValues'
        '404':
          description: Returned if the social media user is not found for this social media account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'

  /custom-field/conversations/{conversation_id}:
    parameters:
      - in: path
        name: conversation_id
        description: A conversation_id which uniquely identifies a conversation
        required: true
        schema:
          type: integer
    put:
      tags:
        - Conversation
      summary: Set conversation fields
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FieldValues'
      responses:
        '200':
          description: Returned upon succes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseOk'
    get:
      tags:
        - Conversation
      summary: Return conversation fields
      responses:
        '200':
          description: Returned upon succes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldValues'

  /custom-field/users/fields/{custom_field_id}:
    parameters:
      - in: path
        name: custom_field_id
        description: A custom_field_id which uniquely identifies a custom field.
        required: true
        schema:
          type: integer
    get:
      tags:
        - Fields
      summary: Get metadata for a custom field
      description: >
        Return the metadata for the given custom field id
      responses:
        '200':
          description: Returned upon succes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FieldMetadata'
        '404':
          description: Returned if the custom field id is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
  /custom-field/users/fields:
    get:
      tags:
        - Fields
      summary: Get metadata for all custom fields
      description: >
        Return the metadata for all user custom fields
      responses:
        '200':
          description: Returned upon succes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FieldMetadata'
