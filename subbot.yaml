openapi: 3.0.0
servers:
  - url: https://your.server/
    description: Your webhook server

info:
  title: Subbot API
  version: '1.0'

x-readme:
  explorer-enabled: false

components:

  securitySchemes:
    basic_auth:
      type: http
      scheme: basic

  schemas:

    HandleEventRequestV2:
      allOf:
        - $ref: '#/components/schemas/EventRequestV2'
        - type: object
          properties:
            variables:
              type: object
              description: >
                The variables which were returned from the last call to
                the /handle-event or /start endpoint

    HandleEventRequestV1:
      allOf:
        - $ref: '#/components/schemas/EventRequestV1'
        - type: object
          properties:
            variables:
              type: object
              description: >
                The variables which were returned from the last call to
                the /handle-event or /start endpoint

    HandleEventRequest:
      oneOf:
        - $ref: '#/components/schemas/HandleEventRequestV1'
        - $ref: '#/components/schemas/HandleEventRequestV2'

    StartEventRequestV2:
      allOf:
        - $ref: '#/components/schemas/EventRequestV2'
        - type: object
          properties:
            global_variables:
              type: object
              description: >
                A set of conversation variables that the bot box can read. 
                Only variables specified in Description.input_variables are available.

    StartEventRequestV1:
      allOf:
        - $ref: '#/components/schemas/EventRequestV1'
        - type: object
          properties:
            global_variables:
              type: object
              description: >
                A set of conversation variables that the bot box can read.
                Only variables specified in Description.input_variables are available.

    StartEventRequest:
      oneOf:
        - $ref: '#/components/schemas/StartEventRequestV1'
        - $ref: '#/components/schemas/StartEventRequestV2'

    BotResponse:
      type: object
      properties:
        variables:
          type: object
          description: The per-box/per-conversation variables that the bot wishes to store until a later call to URL/start or URL/event
        messages:
          description: >
            A list of MessageResponse which will be sent by Alcmeon on behalf of the subbot.
            These messages will be sent before the `exit` field is processed.
            If no messages should be sent, an empty array is expected
          type: array
          items:
            $ref: '#/components/schemas/MessageResponse'
        exit:
          description: >
            A description of the output connector Alcméon should take to exit this bot box. 
            If null, no exit will be taken and the next messenge/event sent by a user
            will be forwarded to the same subbot via its handle-event endpoint.
            This field is processed after any messages from the `messages` field are sent.
          $ref: '#/components/schemas/ExitResponse'

    ExitResponse:
      type: object
      properties:
        delay_ms:
          type: integer
          description: >
            The number of milliseconds until Alcméon executes this response.
            A convenient way to insert a delay before exiting the box.
        global_variables:
          type: object
          description: >
            A set of variables that Alcméon should copy in the per/user 
            conversation variables. Only variables specified in 
            Description.output_variables will be taken into account. 
            All other variables will be ignored.
        reason:
          description: The name of the output connector to exit through. This field should match Description.exits.name
          type: string

    Exit:
      type: object
      properties:
        name:
          type: string
          description: The unique name of the output connector.
        description:
          type: string
          description: >
            A human-readable description of what it means to exit 
            the bot box via this output connector. Displayed in the Alcméon editor GUI.

    Variable:
      type: object
      properties:
        name:
          type: string
          description: The unique name of the user conversation variable
        description:
          type: string
          description: >
            A human-readable description of the meaning of 
            the content of this variable. Displayed in the Alcméon editor GUI.

    IntegerParameterSpecification:
      type: object
      properties:
        min:
          description: All parameter values should be such that value >= min
          type: integer
        max:
          description: All parameter values should be such that value < max
          type: integer

    FloatParameterSpecification:
      type: object
      properties:
        min:
          description: All parameter values should be such that value >= min
          type: number
        max:
          description: All parameter values should be such that value < max
          type: number

    StringParameterSpecification:
      type: object
      properties:
        regexp:
          type: string
          description: >
            A regular expression that constrains the values allowed. 
            This regular expression should match the [Javascript syntax](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)

    FileParameterSpecification:
      type: object
      properties:
        mime_types:
          description: The list of mime types allowed for this file
          type: array
          items:
            type: string

    ExcelFileSheetHeaderParameterSpecification:
      type: object
      properties:
        name:
          description: Name of header
          type: string
        type:
          description: >
            Type of header. The following types are supported:
              - integer: any positive or negative integers.
              - float: any positive or negative floats.
              - string: any string
              - url: a string, formatted as a url. Only http:// and https:// urls are supported.
              - datetime: a datetime in YYYY-MM-DDTHH:MM:SS+0 format (GMT)
              - url_to_shorten: a string, formatted as a url. Only http:// and https:// urls are supported.
                Any cell within a column of this type will be replaced by a shortened version before
                being stored for use by a subbot
          type: string
          enum: [integer, float, string, url, datetime, url_to_shorten]
        is_mandatory:
          description: If true, mandatory a file that is missing the header cannot be uploaded successfully.
          type: boolean
          default: false

    ExcelFileSheetParameterSpecification:
      type: object
      properties:
        headers:
          type: array
          items:
            $ref: '#/components/schemas/ExcelFileSheetHeaderParameterSpecification'

    ExcelFileParameterSpecification:
      description: If the content of a cell does not match the type of its header, the file will be rejected during upload.
      type: object
      properties:
        sheets:
          type: array
          items:
            $ref: '#/components/schemas/ExcelFileSheetParameterSpecification'

    EnumParameterSpecification:
      type: object
      properties:
        values:
          description: >
            The list of values that can be chosen for this parameter. 
            The bot editor GUI will display this list in a dropdown for selection.
          type: array
          items:
            type: string

    FileParameterValue:
      type: object
      description: The value for parameters of type `file`
      properties:
        url:
          type: string
          format: uri
          description: "Where to download the file. This url should not be cached: it is valid for less than 30 seconds."
        cache_key:
          type: string
          description: A unique id which can be used as the key to cache the file downloaded from the url. This id is warranted to change if the file is changed by the user.

    TabularArraysParameterValue:
      type: object
      description: The value for parameters of type `excel`
      properties:
        url:
          type: string
          format: uri
          description: >
            Where to download the file. This url should not be cached.
            It is valid for less than 30 seconds. This url is the full
            url to the [GET /uploaded-tabular-data](ref:get_uploaded-tabular-data) endpoint.
        cache_key:
          type: string
          description: A unique id which can be used as the key to cache the file downloaded from the url. This id is warranted to change if the file is changed by the user.

    TabularArrayCellInteger:
      type: integer
      description: A cell which contains a value for a header of type `integer`

    TabularArrayCellFloat:
      type: number
      description: A cell which contains a value for a header of type `float`

    TabularArrayCellString:
      type: string
      description: A cell which contains a value for a header of type `string`

    TabularArrayCellUrl:
      type: string
      format: uri
      description: A cell which contains a value for a header of type `url`

    TabularArrayCellDatetime:
      type: string
      format: datetime
      description: >
        A cell which contains a value for a header of type `datetime`.
        Format is "YYYY-MM-DDTHH:MM:SS+0" (GMT)

    TabularArrayCellShortenedUrl:
      type: string
      format: uri
      description: A cell which contains a value for a header of type `url_to_shorten`. i.e., a shortened url.

    TabularArrayCell:
      oneOf:
        - $ref: '#/components/schemas/TabularArrayCellInteger'
        - $ref: '#/components/schemas/TabularArrayCellFloat'
        - $ref: '#/components/schemas/TabularArrayCellString'
        - $ref: '#/components/schemas/TabularArrayCellUrl'
        - $ref: '#/components/schemas/TabularArrayCellDatetime'
        - $ref: '#/components/schemas/TabularArrayCellShortenedUrl'

    TabularArrayRow:
      type: array
      items:
        $ref: '#/components/schemas/TabularArrayCell'

    TabularArrayHeader:
      description: A header for a column
      type: object
      properties:
        name:
          type: string
        type:
          type: string
    

    TabularArray:
      type: object
      properties:
        headers:
          type: array
          items:
            $ref: '#/components/schemas/TabularArrayHeader'
        rows:
          type: array
          items:
            $ref: '#/components/schemas/TabularArrayRow'

    TabularArrays:
      type: object
      description: user data uploaded as excel, converted to a set of tabular arrays, one for each excel sheet.
      properties:
        arrays:
          type: array
          items:
            $ref: '#/components/schemas/TabularArray'

    StringParameterValue:
      type: string
      description: The value for parameters of type `string`

    FloatParameterValue:
      type: number
      description: The value for parameters of type `float`

    IntegerParameterValue:
      type: integer
      description: The value for parameters of type `integer`

    BooleanParameterValue:
      type: boolean
      description: The value for parameters of type `boolean`

    UrlParameterValue:
      type: string
      format: uri
      description: The value for parameters of type `url`

    EnumParameterValue:
      type: string
      description: The value for parameters of type `enum`

    ParameterValue:
      description: A value for a parameter
      nullable: true
      oneOf:
        - $ref: '#/components/schemas/StringParameterValue'
        - $ref: '#/components/schemas/FloatParameterValue'
        - $ref: '#/components/schemas/IntegerParameterValue'
        - $ref: '#/components/schemas/BooleanParameterValue'
        - $ref: '#/components/schemas/UrlParameterValue'
        - $ref: '#/components/schemas/EnumParameterValue'
        - $ref: '#/components/schemas/FileParameterValue'
        - $ref: '#/components/schemas/TabularArraysParameterValue'

    Parameter:
      type: object
      properties:
        type:
          type: string
          enum: [integer, float, boolean, string, url, enum, file, excel]
          description: The type of the parameter
        name:
          type: string
          description: The unique name of the box parameter
        description:
          type: string
          description: >
            A human-readable description of the meaning of the content of 
            this parameter. Displayed in the Alcméon editor GUI.
        default:
          $ref: '#/components/schemas/ParameterValue'
        specification:
          $ref: '#/components/schemas/ParameterSpecification'

    ParameterSpecification:
      description: >
        This field contains a type-specific dictionary that describes 
        the set of values allowed for this parameter.


        This field can be set to null or an empty dictionary to indicate 
        that no specific constraints exist for this parameter.
      nullable: true            
      oneOf:
        - $ref: '#/components/schemas/IntegerParameterSpecification'
        - $ref: '#/components/schemas/FloatParameterSpecification'
        - $ref: '#/components/schemas/StringParameterSpecification'
        - $ref: '#/components/schemas/FileParameterSpecification'
        - $ref: '#/components/schemas/ExcelFileParameterSpecification'
        - $ref: '#/components/schemas/EnumParameterSpecification'

    Description:
      type: object
      properties:
        name:
          type: string
          description: The name of the bot. It will be displayed in the Alcméon editor GUI
        version:
          type: string
          description: Which version of the subbot protocol this subbot supports. If this is not specified, we assume the subbot supports the v1 API.
          enum: [v1, v2]
          default: v1
        description:
          type: string
          description: A human-readable description of what the bot does. Displayed in the Alcméon editor GUI
        exits:
          description: A list of Exit objects, each of which describes an output connector for the bot.
          type: array
          items:
            $ref: '#/components/schemas/Exit'
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
          description: >
            A list of Parameter objects, each of which describes an attribute that can be 
            configured within the Alcméon editor GUI for a box instance.
        input_variables:
          description: >
            A list of Variable objects, each of which describes a user conversation 
            variable that can be read by the bot when a user enters a box via the 
            input connector.
          type: array
          items:
            $ref: '#/components/schemas/Variable'
        output_variables:
          description: >
            A list of Variable objects, each of which describes a user conversation 
            variable that can be written to by the bot when a user exits a box via 
            one of the bot-specific output connector.
          type: array
          items:
            $ref: '#/components/schemas/Variable'
        backends:
          description: >
            A list of backend names that this bot supports. If no value is specified, 
            this bot supports them all.
          type: array
          items:
            $ref: '#/components/schemas/Backend'
        companies:
          description: >
            A list of Alcméon customer names that this bot supports. 
            If no value is specified, this box will be made available to all customers.
          type: array
          items:
            type: string

    ##################################################
    # The core API objects where you need to add new
    # items if you add a new type of backend
    ##################################################

    Backend:
      type: string
      enum:
        - facebook
        - twitter
        - whatsapp
        - gbm
        - webchat

    EventRequestV1:
      type: object
      properties:
        backend:
          $ref: '#/components/schemas/Backend'
          description: The name of the backend this event is generated for
        parameters:
          type: object
          description: The set of key/value pairs associated with the per-box description parameters.
        user_external_id:
          type: string
          description: The raw id of the user in the underlying social network API
        user_name:
          type: string
          description: A user name associated with the underlying social network API
        event:
          oneOf:
            - $ref: '#/components/schemas/MessengerEvent'
            - $ref: '#/components/schemas/TwitterEvent'
            - $ref: '#/components/schemas/WhatsappEvent'
            - $ref: '#/components/schemas/GbmEvent'
            - $ref: '#/components/schemas/WebChatEvent'
            - $ref: '#/components/schemas/Apple_Event'
      required:
        - backend
        - parameters
        - user_external_id
        - user_name
        - event


    EventRequestV2:
      type: object
      description: This object is identical to EventRequestv1, except that the parameters field has been updated to support file parameter values
      properties:
        backend:
          $ref: '#/components/schemas/Backend'
          description: The name of the backend this event is generated for
        parameters:
          type: array
          items:
            description: The set of key/value pairs associated with the per-box description parameters.
            type: object
            properties:
              key:
                type: string
              value:
                $ref: '#/components/schemas/ParameterValue'
        user_external_id:
          type: string
          description: The raw id of the user in the underlying social network API
        user_name:
          type: string
          description: A user name associated with the underlying social network API
        event:
          oneOf:
            - $ref: '#/components/schemas/MessengerEvent'
            - $ref: '#/components/schemas/TwitterEvent'
            - $ref: '#/components/schemas/WhatsappEvent'
            - $ref: '#/components/schemas/GbmEvent'
            - $ref: '#/components/schemas/WebChatEvent'
            - $ref: '#/components/schemas/Apple_Event'
      required:
        - backend
        - parameters
        - user_external_id
        - user_name
        - event

    MessageResponse:
      type: object
      properties:
        delay_ms:
          type: integer
          description: >
            The number of milliseconds until Alcméon executes this response.
            A convenient way to insert a delay before exiting the box.
        body:
          description: >
            An object that matches the structure of the underlying social media message format.
          oneOf:
            - $ref: '#/components/schemas/MessengerMessage'
            - $ref: '#/components/schemas/TwitterMessage'
            - $ref: '#/components/schemas/WhatsappMessage'
            - $ref: '#/components/schemas/GbmMessage'
            - $ref: '#/components/schemas/WebChatMessage'
            - $ref: '#/components/schemas/Apple_Message'

    ##################################################
    # Messenger objects
    ##################################################

    MessengerUrlButton:
      description: >
        A [UrlButton](https://developers.facebook.com/docs/messenger-platform/reference/buttons/url)
      type: object
      properties:
        type:
          type: string
          enum: [web_url]
        title:
          type: string
          maxLength: 20
        url:
          type: string
          format: uri
        webview_height_ratio:
          type: string
          enum: [compact, tall, full]
        messenger_extensions:
          type: boolean
        fallback_url:
          type: string
          format: uri
        webview_share_button:
          type: string
          enum: [hide]
          nullable: true

    MessengerPostbackButton:
      description: >
        A [Postback button](https://developers.facebook.com/docs/messenger-platform/reference/buttons/postback)
      type: object
      properties:
        type:
          type: string
          enum: [postback]
        title:
          type: string
          maxLength: 20
        payload:
          description: The Messenger Length limit for this field is 1000 but we restrict it to 900.
          type: string
          maxLength: 900

    MessengerCallButton:
      description: >
        A [Call button](https://developers.facebook.com/docs/messenger-platform/reference/buttons/call)
      type: object
      properties:
        type:
          type: string
          enum: [phone_number]
        title:
          type: string
          maxLength: 20
        payload:
          type: string

    MessengerLoginButton:
      description: >
        A [Login button](https://developers.facebook.com/docs/messenger-platform/reference/buttons/login)
      type: object
      properties:
        type:
          type: string
          enum: [account_link]
        url:
          type: string
          format: uri

    MessengerLogoutButton:
      description: >
        A [Logout button](https://developers.facebook.com/docs/messenger-platform/reference/buttons/logout)
      type: object
      properties:
        type:
          type: string
          enum: [account_unlink]

    MessengerGamePlayButton:
      description: >
        A [Game play button](https://developers.facebook.com/docs/messenger-platform/reference/buttons/game-play)
      type: object
      properties:
        type:
          type: string
          enum: [game_play]
        title:
          type: string
        payload:
          type: string
        game_metadata:
          type: object
          properties:
            player_id:
              type: string
            context_id:
              type: string
      

    MessengerButton:
      description: >
        A [Button](https://developers.facebook.com/docs/messenger-platform/send-messages/buttons)
      oneOf:
        - $ref: '#/components/schemas/MessengerUrlButton'
        - $ref: '#/components/schemas/MessengerPostbackButton'
        - $ref: '#/components/schemas/MessengerCallButton'
        - $ref: '#/components/schemas/MessengerLoginButton'
        - $ref: '#/components/schemas/MessengerLogoutButton'
        - $ref: '#/components/schemas/MessengerGamePlayButton'
      
    MessengerButtonPayload:
      description: >
        A [payload field](https://developers.facebook.com/docs/messenger-platform/reference/templates/button#payload)
        of a Button template.
      type: object
      properties:
        template_type:
          type: string
          enum: [button]
        text:
          type: string
          maxLength: 640
        buttons:
          type: array
          items:
            $ref: '#/components/schemas/MessengerButton'

    MessengerMessage:
      description: >
        On Messenger, a trimmed down version of the 
        [message](https://developers.facebook.com/docs/messenger-platform/reference/send-api#message) object.
      type: object
      properties:
        text:
          description: Message text.
          type: string
          maxLength: 2000
        attachment:
          type: object
          properties:
            type:
              type: string
              enum: [template]
            payload:
              oneOf:
                - $ref: '#/components/schemas/MessengerButtonPayload'
        quick_replies:
          type: array
          items:
            description: >
              A [quick_reply](https://developers.facebook.com/docs/messenger-platform/reference/buttons/quick-replies#quick_reply) object
            type: object
            properties:
              content_type:
                type: string
                enum: [text, user_phone_number, user_email]
              title:
                type: string
                maxLength: 20
              payload:
                description: The Messenger Length limit for this field is 1000 but we restrict it to 900.
                type: string
                maxLength: 900
              image_url:
                type: string
                format: url
            
    MessengerEvent:
      description: >
        On Messenger, a trimmed down version of the
        [message](https://developers.facebook.com/docs/messenger-platform/reference/webhook-events/messages),
        [messaging_postback](https://developers.facebook.com/docs/messenger-platform/reference/webhook-events/messaging_postbacks), and,
        [messaging_account_linking](https://developers.facebook.com/docs/messenger-platform/reference/webhook-events/messaging_account_linking)
        webhook events. Only the fields described below will be sent to the application.
      type: object
      properties:
        message:
          description: >
            A trimmed down version of the [messaging](https://developers.facebook.com/docs/messenger-platform/reference/webhook-events/messages#messaging) field of the `message` webhook event.
          type: object
          properties:
            text:
              type: string
              description: Text of message
            quick_reply:
              description: Optional custom data provided by the sending app
              type: object
              properties:
                payload:
                  type: string
                  description: Custom data provided by the app
        postback:
          description: >
            A trimmed version of the [postback](https://developers.facebook.com/docs/messenger-platform/reference/webhook-events/messaging_postbacks#postback) field of the `messaging_postback` webhook.
          type: object
          properties:
            payload:
              description: payload parameter that was defined with the button.
              type: string
        account_linking:
          description: >
            A trimmed down version of the [account_linking](https://developers.facebook.com/docs/messenger-platform/reference/webhook-events/messaging_account_linking#account_linking) field of the `messaging_account_linking` webhook
          type: object
          properties:
            status:
              type: string
              enum: [linked]
            authorization_code:
              type: string
              description: >
                Value of pass-through authorization_code provided in the
                [Account Linking](https://developers.facebook.com/docs/messenger-platform/account-linking/link-account) flow
  
    ##################################################
    # Twitter objects
    ##################################################

    TwitterMessage:
      description: >
        On Twitter, a [MessageDataObject](https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/sending-and-receiving/api-reference/new-event#message-data-object) object
      type: object
      properties:
        text:
          type: string
        quick_reply:
          description: >
            [QuickReply](https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/quick-replies/api-reference/options) object
          type: object
          properties:
            type:
              type: string
              enum: [options]
            options:
              type: array
              items:
                type: object
                properties:
                  label:
                    type: string
                    maxLength: 36
                  description:
                    type: string
                    maxLength: 72
                  metadata:
                    type: string
                    maxLength: 1000
        attachment:
          $ref: '#/components/schemas/TwitterAttachment'

    TwitterHashtag:
      type: array
      items:
        type: object
        properties:
          indices:
            type: array
            items:
              type: integer
          text:
            type: string

    TwitterUrl:
      type: object
      properties:
        display_url:
          type: string
        expanded_url:
          type: string
        indices:
          type: array
          items:
            type: integer
        url:
          type: string

    TwitterUserMention:
      type: object
      properties:
        id:
          type: integer
        id_str:
          type: string
        indices:
          type: array
          items:
            type: integer
        name:
          type: string
        screen_name:
          type: string

    TwitterSymbol:
      type: object
      properties:
        indices:
          type: array
          items:
            type: integer
        text:
          type: string

    TwitterSize:
      type: object
      properties:
        w:
          type: integer
        h:
          type: integer
        resize:
          type: string
          enum: [fit, crop]

    TwitterMedia:
      type: object
      properties:
        display_url:
          type: string
        expanded_url:
          type: string
        id:
          type: integer
        id_str:
          type: string
        indices:
          type: array
          items:
            type: integer
        media_url:
          type: string
        media_url_https:
          type: string
        sizes:
          type: object
          properties:
            thumb:
              $ref: '#/components/schemas/TwitterSize'
            large:
              $ref: '#/components/schemas/TwitterSize'
            medium:
              $ref: '#/components/schemas/TwitterSize'
            small:
              $ref: '#/components/schemas/TwitterSize'
        source_status_id:
          type: integer
        source_status_id_str:
          type: string
        type:
          type: string
          enum: [photo, video, animated_gif]
        url:
          type: string

    TwitterEntities:
      description: >
        An [Entities](https://developer.twitter.com/en/docs/twitter-api/v1/data-dictionary/object-model/entities#hashtags)
        object as
      type: object
      properties:
        hashtags:
          description: >
            A list of [HashTag](https://developer.twitter.com/en/docs/twitter-api/v1/data-dictionary/object-model/entities#hashtags) objects
          type: array
          items:
            $ref: '#/components/schemas/TwitterHashtag'
        media:
          description: >
            A list of [Media](https://developer.twitter.com/en/docs/twitter-api/v1/data-dictionary/object-model/entities#media) objects
          type: array
          items:
            $ref: '#/components/schemas/TwitterMedia'
        urls:
          description: >
            A list of [Url](https://developer.twitter.com/en/docs/twitter-api/v1/data-dictionary/object-model/entities#urls) objects
          type: array
          items:
            $ref: '#/components/schemas/TwitterUrl'
        user_mentions:
          description: >
            A list of [User Mention](https://developer.twitter.com/en/docs/twitter-api/v1/data-dictionary/object-model/entities#user_mentions) objects
          type: array
          items:
            $ref: '#/components/schemas/TwitterUserMention'
        symbols:
          description: >
            A list of [Symbol](https://developer.twitter.com/en/docs/twitter-api/v1/data-dictionary/object-model/entities#symbols) objects
          type: array
          items:
            $ref: '#/components/schemas/TwitterSymbol'

    TwitterEvent:
      description: >
        On Twitter, a subset of the [message_data](https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/sending-and-receiving/guides/message-create-object) object. The list of supported fields is documented below.
      type: object
      properties:
        text:
          type: string
          description: >
            The Direct Message text.
#        entities:
#          $ref: '#/components/schemas/TwitterEntities'
        quick_reply_response:
          description: >
            A [quick_reply_response](https://developer.twitter.com/en/docs/direct-messages/quick-replies/overview) object  
          type: object
          properties:
            type:
              type: string
              enum: [options]
            metadata:
              type: string
#        attachment:
#          $ref: '#/components/schemas/TwitterAttachment'

    TwitterAttachment:
      description: >
        An [attachment](https://developer.twitter.com/en/docs/direct-messages/message-attachments/overview) object


        Note: this field can be set but will be ignored for now
      type: object
      properties:
        type:
          type: string
          enum: [media]
        media:
          type: object
          properties:
            id:
              type: string


    ##################################################
    # Whatsapp objects
    ##################################################

    button:
      description: A subset of the [Reply Buttons](https://developers.facebook.com/docs/whatsapp/guides/interactive-messages#reply-buttons) object
      type: object
      properties:
        type:
          type: string
          description: Must be set to `button`
        body:
          type: object
          properties:
            text:
              description: An text displayed before the buttons
              type: string
        action:
          type: object
          properties:
            buttons:
              type: array
              description: >
                A list of buttons
              items:
                type: object
                properties:
                  type:
                    type: string
                    description: >
                      The type of the button object
                    enum: [reply]
                  reply:
                    type: object
                    description: >
                      A clickable reply button
                    properties:
                      title:
                        type: string
                        description: >
                          The label displayed in the button
                      id:
                        type: string
                        description: >
                          An unique postback id associated with the button

    list:
      description: A subset of the [List message](https://developers.facebook.com/docs/whatsapp/guides/interactive-messages#list-messages) object
      type: object
      properties:
        type:
          type: string
          description: Must be set to `list`
        body:
          type: object
          properties:
            text:
              description: The text of the message
              type: string
        action:
          type: object
          properties:
            sections:
              type: array
              description: >
                A list of rows containing a title with one or more buttons
              items:
                type: object
                properties:
                  title:
                    type: string
                    description: >
                      The title associated with the section
                  rows:
                    type: array
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          description: >
                            The title associated with the button
                        id:
                          type: string
                          description: >
                            An unique id associated with the button
                        description:
                          type: string
                          description: >
                            A simple text describing what button does (optional)
            button:
              type: string
              description: A simple text to describe the content of the list of buttons to display below

    WhatsappMediaObject:
      description: A subset of the [Media object](https://developers.facebook.com/docs/whatsapp/api/messages#media-object) object
      type: object
      properties:
        link:
          type: string
          description: The URL of the media to be sent
        caption:
          type: string
          description: Media description

    WhatsappOrderObject:
      type: object
      properties:
        type:
          type: string
          description: For this use case, type will be set to `order`
        order:
          type: object
          description: >
            An object containing a catalog identifier and a list of products
          properties:
            catalog_id:
              description: An unique identifier of the Facebook catalog linked to your WhatsApp Business Account
              type: string
            product_items:
              type: array
              description: >
                A list of products
              items:
                type: object
                properties:
                  product_retailer_id:
                    type: string
                    description: Unique identifier of the product in a catalog
                  quantity:
                    type: string
                    description: The number of item for this product
                  item_price:
                    type: string
                    description: The unitary price of an item
                  currency:
                    type: string
                    description: The price currency

    product:
      description: A [Single product message object](https://developers.facebook.com/docs/whatsapp/guides/commerce-guides/share-products-with-customers#single-product-messages)
      type: object
      properties:
        type:
          type: string
          description: Must be set to `product`
        body:
          type: object
          properties:
            text:
              description: A text displayed before the product
              type: string
        footer:
          type: object
          properties:
            text:
              description: A text displayed after the product
              type: string
        action:
          description: An [action object](https://developers.facebook.com/docs/whatsapp/api/messages#action-object)
          type: object
          properties:
            catalog_id:
              type: string
              description: An unique identifier of the Facebook catalog linked to your WhatsApp Business Account
            product_retailer_id:
              type: string
              description: Unique identifier of the product in a catalog

    product_list:
      description: A [product-list message object](https://developers.facebook.com/docs/whatsapp/guides/commerce-guides/share-products-with-customers#multi-product-messages)
      type: object
      properties:
        type:
          type: string
          description: Must be set to `product_list`
        header:
          type: object
          properties:
            type:
              description: Must be set to 'text'
              type: string
            text:
              description: A text displayed at the top of the list object
              type: string
        body:
          type: object
          properties:
            text:
              description: A text displayed before the list of objects
              type: string
        footer:
          type: object
          properties:
            text:
              description: A text displayed after the list of objects
              type: string
        action:
          description: An [action object](https://developers.facebook.com/docs/whatsapp/api/messages#action-object)
          type: object
          properties:
            catalog_id:
              type: string
              description: An unique identifier of the Facebook catalog linked to your WhatsApp Business Account
            sections:
              type: array
              description: >
                A list of elements (max 30) containing a title with one or more products
              items:
                type: object
                properties:
                  title:
                    type: string
                    description: >
                      The title associated with the section
                  product_items:
                    type: array
                    description: Array of product objects to display
                    items:
                      type: object
                      properties:
                        product_retailer_id:
                          type: string
                          description: >
                            Unique identifier of the product in a catalog


    WhatsappMessage:
      description: >
        On Whatsapp, a subset of the [message](https://developers.facebook.com/docs/whatsapp/api/messages#parameters) object.
      type: object
      properties:
        type:
          description: >
            A `text` or `interactive` or `document` or `image` or `video` object
          type: string
          enum: [text, interactive, document, image, video]
        text:
          description: >
            A [text_object](https://developers.facebook.com/docs/whatsapp/api/messages#text-object)
          type: object
          properties:
            body:
              description: The text of the message
              type: string
            preview_url:
              type: boolean
              default: false
              description: >
                If true, Whatsapp will attempt to generate a preview within the Whatsapp application.
                Note: this field is located in the text.body object on purpose, to mirror the 
                Whatsapp cloud API. We automatically convert that field to the proper field if
                using the on-premise API.
                [Limitations](https://developers.facebook.com/docs/whatsapp/api/messages/text#urls)
        interactive:
          description: A subset of an [interactive message](https://developers.facebook.com/docs/whatsapp/guides/interactive-messages) object.
          type: object
          oneOf:
            - $ref: '#/components/schemas/list'
            - $ref: '#/components/schemas/button'
            - $ref: '#/components/schemas/product'
            - $ref: '#/components/schemas/product_list'
        image:
          description: >
            A [media_object](https://developers.facebook.com/docs/whatsapp/api/messages#media-object) containing an image
          type: object
          allOf:
           - $ref: '#/components/schemas/WhatsappMediaObject'
        video:
          description: >
            A [media_object](https://developers.facebook.com/docs/whatsapp/api/messages#media-object) containing a video
          type: object
          allOf:
           - $ref: '#/components/schemas/WhatsappMediaObject'
        document:
          description: >
            A [media_object](https://developers.facebook.com/docs/whatsapp/api/messages#media-object) containing a document
          type: object
          allOf:
           - $ref: '#/components/schemas/WhatsappMediaObject'

    WhatsappEvent:
      description: >
        On Whatsapp, a subset of the [message](https://developers.facebook.com/docs/whatsapp/api/messages#parameters) object.
      type: object
      properties:
        type:
          description: >
            A `text` (with or without `context`) or `interactive` or `button` or `order` object
          type: string
          enum: [ text, interactive, button, order ]

        text:
          description: >
            A [text_object](https://developers.facebook.com/docs/whatsapp/api/messages#text-object)
          type: object
          properties:
            body:
              description: The text of the message
              type: string
        context:
          description: >
            Can be used to receive information about a product: mandatory when user asks information about a product to 
            get product and catalog references. In this case, event type must be `text` and a `text` object must be included in the event
          type: object
          properties:
            referred_product:
              type: object
              properties:
                catalog_id:
                  description: An unique identifier of the Facebook catalog linked to your WhatsApp Business Account
                  type: string
                product_retailer_id:
                  description: Unique identifier of the product in a catalog
                  type: string
        interactive:
          description: >
            A [interactive object](https://developers.facebook.com/docs/whatsapp/guides/interactive-messages)
          type: object
          properties:
            button_reply:
              description: A [Reply Buttons object](https://developers.facebook.com/docs/whatsapp/guides/interactive-messages)
              type: object
              properties:
                title:
                  description: The button label
                  type: string
                  example: Button-1
                payload:
                  description: An unique id associated with the button
                  type: string
                  example: 123
            list_reply:
              description: A [List Messages object](https://developers.facebook.com/docs/whatsapp/guides/interactive-messages)
              type: object
              properties:
                title:
                  description: The button label
                  type: string
                  example: Button-1
                description:
                  description: A text describing what the button represents
                  type: string
                  example: This is my answer
                payload:
                  description: An unique id associated with the button
                  type: string
                  example: 123
        order:
          description: >
            An [order object](https://developers.facebook.com/docs/whatsapp/guides/commerce-guides/receive-responses-from-customers#placing-an-order)
          type: object
          allOf:
            - $ref: '#/components/schemas/WhatsappOrderObject'
        button:
          description: A [callback from quick reply button click object](https://developers.facebook.com/docs/whatsapp/api/messages/message-templates/interactive-message-templates#callback-from-a-quick-reply-button-click)
          type: object
          properties:
            payload:
              description: >
                The payload associated with the quick reply button clicked
              type: string
            text:
              description: >
                The text associated with the button
              type: string



    ##################################################
    # Google Business Messages objects
    ##################################################

    GbmMessage:
      description: >
        On Google Business Messages, a subset of the 
        [Message](https://developers.google.com/business-communications/business-messages/reference/rest/v1/conversations.messages#resource:-message) object
      type: object
      properties:
        text:
          description: Text message.
          type: string
        containsRichText:
          description:  >
            If true, indicates that the message contains 
            [rich text](https://developers.google.com/business-communications/business-messages/guides/build/send#rich_text).
          type: boolean

    GbmEvent:
      description: >
        On Google Business Messages, a subset of 
        [Text](https://developers.google.com/business-communications/business-messages/guides/build/receive#text) objects
      type: object
      properties:
        message:
          description: >
            A subset of
            [Message](https://developers.google.com/business-communications/business-messages/reference/rest/v1/Message) objects
          type: object
          properties:
            text:
              type: string

    ##################################################
    # Webchat Messages objects
    ##################################################

    WebchatText:
      type: object
      description: Text message
      properties:
        type:
          type: string
          enum: [text]
        datetime:
          type: string
          description: Datetime of the message
        text:
          type: object
          properties:
            content:
              description: Content of message
              type: string
              example: Hello

    WebchatImage:
      type: object
      description: Image message
      properties:
        type:
          type: string
          enum: [image]
        datetime:
            type: string
            description: Datetime of the message
        image:
          type: object
          properties:
            width:
              description: The width of the image
              type: integer
              example: 600
            height:
              description: The height of the image
              type: integer
              example: 326
            url:
              description: >
                A url which is valid only for a short amount of time (less than 60 seconds).
                If the callee wishes to access the content of the image, he should download
                the body of this url right away.
              type: string
              format: uri
              example: https://admin.alcmeon.com/2/temporary-public-files/55edf7a6-65c2-4c45-9aa2-ee206044e5ee?jwt=XXX

    WebchatButton:
      type: object
      description: Button clicked event
      properties:
        type:
          type: string
          enum: [ button ]
        datetime:
          type: string
          description: Datetime of the message
        button:
          type: object
          properties:
            name:
              description: Label that is displayed on the button
              type: string
              example: This is my store!
            payload:
              description: The payload associated with the button
              type: string
              example: 3917

    WebchatTextInputResponse:
      type: object
      description: User phone or email input
      properties:
        type:
          type: string
          enum: [ text_input_response ]
        datetime:
            type: string
            description: Datetime of the message
        text_input_response:
          type: object
          properties:
            type:
              type: string
              enum: [ phone, email ]
              description: The type field from the matching TextInput object
            content:
              type: string
              description: input value
              example: aaa@gmail.com
            payload:
              type: string
              description: Payload field from the matching TextInput object
              example: 3497

    WebchatPostback:
      type: object
      description: User clicked on a postback button
      properties:
        type:
          type: string
          enum: [ postback ]
        datetime:
          type: string
          description: Datetime of the message
        postback:
          type: object
          properties:
            payload:
              type: string
              description: The payload associated with the postback button displayed in the persistent menu

    WebChatMessage:
      description: >
        On WebChat, a subset of the
        [Message](https://docs.google.com/document/d/1cLUiM00Yd4Vw_EWkBmyMlmSfxAeKRJj1_1nRUJirgL0/edit?usp=sharing) object
      type: object
      properties:
        type:
          type: string
          enum: [text]
        text:
          type: object
          description: Send a text message back to the user.
          properties:
            type:
              type: string
              enum: [ text ]
            text:
              type: object
              properties:
                content:
                  description: Content of message
                  type: string
                  example: Hello
        buttons:
          type: array
          description: List of buttons displayed under message
          items:
            type: object
            properties:
              name:
                type: string
                description: label of button, displayed on screen
              payload:
                type: string
                description: arbitrary string hidden from the user, associated with button

    WebChatEvent:
      description: >
        On WebChat, a Message object
      oneOf:
        - $ref: '#/components/schemas/WebchatText'
        - $ref: '#/components/schemas/WebchatImage'
        - $ref: '#/components/schemas/WebchatButton'
        - $ref: '#/components/schemas/WebchatTextInputResponse'
        - $ref: '#/components/schemas/WebchatPostback'

    ##################################################
    # Apple Messages for Business objects
    ##################################################
    AppleLocale:
      description: The user's device locale settings as an ISO locale code. XXX. Fill valid values in enum below
      type: string
      enum:
        - fr_FR
        - en_UK

    AppleCountryCode:
      description: a two-letter ISO 3166 country code. XXX. Fill valid values in enum below
      type: string

    AppleCurrencyCode:
      description:  a three-letter ISO 4217 currency code. XXX. Fill valid values in enum below
      type: string

    AppleAttachment:
      type: object
      properties:
        name:
          description: the name of the file created by the user.
          type: string
        file-size:
          description: the size of the attachment in bytes.
          type: number
        mime-type:
          description: mime type of the attachment.
          type: string
        url:
          description: url where the attachment can be downloaded. This url is short-lived.
          type: string
          format: uri

    Apple_Text_Event:
      description: >
        A message of type [Text](https://register.apple.com/resources/messages/msp-rest-api/type-text)
      type: object
      properties:
        type:
          type: string
          enum: [text]
        locale:
          $ref: '#/components/schemas/AppleLocale'
        body:
          description: The text of the message sent by the user
          type: string
        attachments:
          description: The list of attachments associated with this message
          type: array
          items:
            $ref: '#/components/schemas/AppleAttachment'
#        group:
#          description: [Group](https://register.apple.com/resources/messages/messaging-documentation/message-with-customers) field
#          type: string
#        intent:
#          description: [Intent](https://register.apple.com/resources/messages/messaging-documentation/message-with-customers) field
#          type: string
        capability-list:
          description: The list of the user's device capabilities.
          type: array
          items:
            type: string
            enum: [quick, list, time, auth, auth2, form]
      required:
        - type
        - locale
        - body



    Apple_Typing_Start_Event:
      description: >
        A message of type typing_start
      type: object
      properties:
        type:
          type: string
          enum: [typing_start]
      required:
        - type

    Apple_Typing_End_Event:
      description: >
        A message of type typing_end
      type: object
      properties:
        type:
          type: string
          enum: [typing_end]
      required:
        - type

    Apple_Close_Event:
      description: >
        A message of type [close](https://register.apple.com/resources/messages/msp-rest-api/messages-received#receiving-a-closed-conversation)
      type: object
      properties:
        type:
          type: string
          enum: [close]
      required:
        - type

    AppleInteractiveEvent:
      type: object
      properties:
        type:
          type: string
          enum: [interactive]
        locale:
          $ref: '#/components/schemas/AppleLocale'
        interactiveData:
          type: object
          properties:
            bid:
              type: string
              enum:
                - com.apple.messages.MSMessageExtensionBalloonPlugin:0000000000:com.apple.icloud.apps.messages.business.extension
            data:
              type: object
              properties:
                requestIdentifier:
                  type: string
                images:
                  $ref: '#/components/schemas/AppleInteractiveImages'
              required:
                - requestIdentifier
                - version
          required:
            - bid
            - data
      required:
        - type
        - interactive

    AppleInteractiveEventv1:
      allOf:
        - $ref: '#/components/schemas/AppleInteractiveEvent'
        - type: object
          properties:
            interactiveData:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    version:
                      type: string
                      enum: [1.0]
      
    AppleInteractiveEventv2:
      allOf:
        - $ref: '#/components/schemas/AppleInteractiveEvent'
        - type: object
          properties:
            interactiveData:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    version:
                      type: string
                      enum: [2.0]
      

    Apple_Quick_Reply_Event:
      allOf:
        - $ref: '#/components/schemas/AppleInteractiveEventv1'
        - type: object
          description: a [QuickReply](https://register.apple.com/resources/messages/msp-rest-api/type-interactive#quick-reply-webhook-event) event
          properties:
            interactiveData:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    selectedIndex:
                      description: The selected item number from top order.
                      type: integer
                    selectedIdentifier:
                      description: The selected identifier of the item.
                      type: string
                    items:
                      $ref: '#/components/schemas/Apple_Quick_Reply_Items'
                  required:
                    - selectedIndex
                    - selectedIdentifier
                    - items

    AppleListPickerSection:
      type: object
      properties:
        title:
          type: string
        order:
          type: integer
        multipleSelection:
          type: boolean
          default: false
        listPickerItem:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
              identifier:
                type: string
              subtitle:
                type: string
              order:
                type: integer
              imageIdentifier:
                type: string
              style:
                $ref: '#/components/schemas/AppleStyle'
            required:
              - identifier
              - title
      required:
        - title

    Apple_List_Picker_Event:
      allOf:
        - $ref: '#/components/schemas/AppleInteractiveEventv1'
        - type: object
          properties:
            interactiveData:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    listPicker:
                      type: object
                      properties:
                        sections:
                          type: array
                          items:
                            allOf:
                              - description: >
                                  The first element in this array contains the items selected by the user.
                                  The second element in this array
#                                type: array
#                                minItems: 2
#                                maxItems: 2
                              - $ref: '#/components/schemas/AppleListPickerSection'
                      required:
                        - sections
                  required:
                    - listPicker
      
    Apple_Time_Picker_Event:
      allOf:
        - $ref: '#/components/schemas/AppleInteractiveEventv1'
        - description: XXX. Undocumented.

    Apple_Form_Event:
      allOf:
        - $ref: '#/components/schemas/AppleInteractiveEventv1'
        - description: a user's [response](https://register.apple.com/resources/messages/msp-rest-api/type-interactive#response-payload) to a form.
          type: object
          properties:
            interactiveData:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    dynamic:
                      type: object
                      properties:
                        selections:
                          type: object
                          properties:
                            pageIdentifier:
                              type: string
                            title:
                              type: string
                            subtitle:
                              type: string
                            items:
                              type: array
                              items:
                                type: object
                                properties:
                                  identifier:
                                    type: string
                                  type:
                                    type: string
                                    enum: [select, datePicker, input]
                                  title:
                                    type: string
                                  value:
                                    type: string
                      required:
                        - selections
                  required:
                    - dynamic
              required:
                - data
          required:
            - interactiveData

    Apple_Authentication_Event:
      allOf:
        - $ref: '#/components/schemas/AppleInteractiveEventv1'
        - type: object
          properties:
            interactiveData:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    authenticate:
                      type: object
                      properties:
                        token:
                          type: string
                          description: A Base64-encoded authentication token string, which is encrypted with the responseEncryptionKey from the request when authentication is successful.
                        status:
                          type: string
                        errors:
                          type: array
                          items:
                            type: object
                            properties:
                              code:
                                description: A numerical error code. 
                                type: integer
                                enum: [1, 2, 3]
                              domain:
                                type: string
                                enum: ['com.apple.icloud.messages.business.cryptor']
                                description: A string indicating the error domain. XXX. Missing description of values (at least, 2. cryptor vs authentication)
                              message:
                                type: string
                                description: A string indicating the description of the error. XXX. Missing description of values
                      required:
                        - status
                        - errors
      
  
    Apple_New_Authentication_Event:
      allOf:
        - $ref: '#/components/schemas/AppleInteractiveEventv2'
        - type: object
          properties:
            interactiveData:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    authenticate:
                      type: object
                      properties:
                        status:
                          type: string
                          enum: [success, failure, cancel, unknown]
                        error_code:
                          type: string
                      required:
                        - status
                        - error_code
      
  

    Apple_Event:
      description: >
        A message sent by a user to a brand.
      oneOf:
        - $ref: '#/components/schemas/Apple_Text_Event'
        - $ref: '#/components/schemas/Apple_Quick_Reply_Event'
        - $ref: '#/components/schemas/Apple_List_Picker_Event'
        - $ref: '#/components/schemas/Apple_Time_Picker_Event'
        - $ref: '#/components/schemas/Apple_Form_Event'
        - $ref: '#/components/schemas/Apple_Typing_Start_Event'
        - $ref: '#/components/schemas/Apple_Typing_End_Event'
        - $ref: '#/components/schemas/Apple_Close_Event'
        - $ref: '#/components/schemas/Apple_Authentication_Event'
        - $ref: '#/components/schemas/Apple_New_Authentication_Event'

    Apple_Text_Message:
      description: A text message
      type: object
      properties:
        type:
          type: string
          enum: [text]
        body:
          description: The text message to send
          type: string
        attachments:
          description: The optional attachments. There should be one \uFFFC in the message text body for each entry in this array.
          type: array
          items:
            $ref: '#/components/schemas/AppleAttachment'
      required:
        - type
        - body

    AppleVideoAsset:
      description: A video asset for rich links
      type: object
      properties:
        mimeType:
          type: string
          enum: [video/mp4]
        url:
          description: a url to the video data
          type: string
          format: uri
      required:
        - mimeType
        - url

    AppleImageAsset:
      description: An image asset for rich links
      type: object
      properties:
        mimeType:
          type: string
          enum: [image/png, image/jpeg]
        data:
          description: a base64 encoded string representing the image bytes
          type: string
      required:
        - mimeType
        - data
  

    Apple_Rich_Link_Message:
      description: >
        A [richLink](https://register.apple.com/resources/messages/msp-rest-api/type-richlink#rich-link-messages) message
      type: object
      properties:
        type:
          type: string
          enum: [richLink]
        body:
          description: The link to send
          type: string
          format: uri
        richLinkData:
          type: object
          properties:
            url:
              type: string
              format: uri
            title:
              type: string
            assets:
              type: object
              properties:
                image:
                  $ref: '#/components/schemas/AppleImageAsset'
                video:
                  $ref: '#/components/schemas/AppleVideoAsset'
          required:
            - url
            - title
            - assets
            
      required:
        - type
        - body
        - richLinkData

    AppleStyle:
      type: string
      description: >
        A style that controls the size of the view rendered by Live Layout. 
        The default is icon.
      enum: [icon, small, large]

    AppleInteractiveResponse:
      description: an [InteractiveResponse](https://register.apple.com/resources/messages/msp-rest-api/type-interactive#InteractiveResponse) object
      type: object
      properties:
        title:
          description: >
            The main title that Messages shows in the header of the reply message bubble.
            When the user taps the reply message bubble, Messages replaces the title with 
            the user’s selection. Limited to 512 characters.
          type: string
          maxLength: 512
        subTitle:
          description: >
            The subtitle that appears under the main title in the reply message bubble.
            When the user taps the reply message bubble, Messages displays the subtitle 
            in the header. Limited to 512 characters. 
          type: string
          maxLength: 512
        secondarySubtitle:
          description: >
            A right-aligned title. Limited to 512 characters. Only custom interactive messages use this key.
          type: string
          maxLength: 512
        tertiarySubtitle:
          description: >
            A right-aligned title. Limited to 512 characters. Only custom interactive messages use this key.
          type: string
          maxLength: 512
        imageTitle:
          description: >
            The attached image's title. Limited to 512 characters. Only custom interactive messages use this key.
          type: string
          maxLength: 512
        imageSubtitle:
          description: >
            The attached image's subtitle. Limited to 512 characters. Only custom interactive messages use this key.
          type: string
          maxLength: 512
        style:
          $ref: '#/components/schemas/AppleStyle'
      required:
        - title

    AppleReplyMessage:
      description: a [ReplyMessage](https://register.apple.com/resources/messages/msp-rest-api/type-interactive#replyMessage) message
      type: object
      properties:
        title:
          type: string
          description: >
            The main title that the Messages app shows in the header of the reply message bubble.
            When the user taps the reply message bubble, the Messages app replaces the title 
            with the user’s selection. Limited to 512 characters.
          maxLength: 512
        subtitle:
          type: string
          description: >
            The subtitle that appears under the main title in the reply message bubble.
            When the user taps the reply message bubble, the Messages app displays the subtitle 
            in the header. Limited to 512 characters.
          maxLength: 512
        imageTitle:
          type: string
          description: The attached image's title. Limited to 512 characters. Only custom interactive messages use this key.
          maxLength: 512
        imageSubtitle:
          type: string
          description: The attached image's subtitle. Limited to 512 characters. Only custom interactive messages use this key.
          maxLength: 512
        secondarySubtitle:
          type: string
          description: A right-aligned title. Limited to 512 characters. Only custom interactive messages use this key.
          maxLength: 512
        tertiarySubtitle:
          type: string
          description: A right-aligned subtitle. Limited to 512 characters. Only custom interactive messages use this key.
          maxLength: 512
        imageIdentifier:
          type: string
          description: The identifier for one of the images specified in interactiveData.data.images.
        style:
          $ref: '#/components/schemas/AppleStyle'

    AppleReceivedMessage:
      allOf:
        - $ref: '#/components/schemas/AppleInteractiveResponse'
        - type: object
          properties:
            imageIdentifier:
              type: string
          required:
            - imageIdentifier

    AppleInteractiveImages:
      type: array
      items:
        description: an [ImageItem](https://register.apple.com/resources/messages/msp-rest-api/type-interactive#ImageItem) in interactiveData.data.images
        type: object
        properties:
          data:
            description: A Base64-encoded string representing the image file data. Always provide @3x images at 72 dpi. 
            type: string
            format: byte
          description:
            description: Description of the image that the systems reads aloud to users who have VoiceOver enabled on their device.
            type: string
          identifier:
            type: string
            description: A string containing the image identifier, which must be unique within the list of images.
        required:
          - data
          - identifier

    Apple_New_Authentication_Message:
      description: A [New Authentication](https://register.apple.com/resources/messages/msp-rest-api/new-oauth) message
      type: object
      properties:
        type:
          type: string
          enum: [interactive]
        locale:
          $ref: '#/components/schemas/AppleLocale'
        interactiveData:
          type: object
          properties:
            bid:
              type: string
              enum:
                - com.apple.messages.MSMessageExtensionBalloonPlugin:0000000000:com.apple.icloud.apps.messages.business.extension
            data:
              type: object
              properties:
                version:
                  type: string
                  enum: [2.0]
                requestIdentifier:
                  type: string
                  format: uuid
                images:
                  $ref: '#/components/schemas/AppleInteractiveImages'
                authenticate:
                  type: object
                  properties:
                    oauth2:
                      type: object
                      properties:
                        redirectURI:
                          type: string
                          format: uri
                        responseType:
                          type: string
                          enum: [code]
                        scope:
                          type: array
                          items:
                            type: string
                        state:
                          type: string
                      required:
                        - scope
                        - state
                        - redirectURI
                        - responseType
                  required:
                    - oauth2
              required:
                - version
                - requestIdentifier
                - authenticate
            receivedMessage:
              $ref: '#/components/schemas/AppleReceivedMessage'
            replyMessage:
              $ref: '#/components/schemas/AppleReplyMessage'
          required:
            - bid
            - data
            - receivedMessage
            - replyMessage
      required:
        - type
        - interactiveData

    Apple_Quick_Reply_Items:
      type: array
      maxLength: 5
      items:
        type: object
        properties:
          identifier:
            type: string
            description: An identifier to identify the item.
          title:
            type: string
            description: Title of the quick reply item. Max 1 line of text.

    AppleBasicInteractiveMessage:
      type: object
      properties:
        type:
          type: string
          enum: [interactive]
        interactiveData:
          type: object
          properties:
            bid:
              type: string
              enum:
                - com.apple.messages.MSMessageExtensionBalloonPlugin:0000000000:com.apple.icloud.apps.messages.business.extension
            data:
              type: object
              properties:
                version:
                  type: string
                  enum: ['1.0']
                requestIdentifier:
                  type: string
              required:
                - version
                - requestIdentifier
          required:
            - bid
            - data
      required:
        - type
        - interactiveData

    AppleInteractiveMessage:
      allOf:
        - $ref: '#/components/schemas/AppleBasicInteractiveMessage'
        - type: object
          properties:
            interactiveData:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    images:
                      $ref: '#/components/schemas/AppleInteractiveImages'
                receivedMessage:
                  $ref: '#/components/schemas/AppleReceivedMessage'
                replyMessage:
                  $ref: '#/components/schemas/AppleReplyMessage'
              required:
                - receivedMessage
                - replyMessage
        

    Apple_Quick_Reply_Message:
      allOf:
        - $ref: '#/components/schemas/AppleBasicInteractiveMessage'
        - description: a [QuickReply](https://register.apple.com/resources/messages/msp-rest-api/type-interactive#quick-reply-message) message
          type: object
          properties:
            interactiveData:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    quick-reply:
                      type: array
                      items:
                        type: object
                        properties:
                          summaryText:
                            type: string
                            description: A summary text that will be used for device notification but also shown in the transcript after user makes a choice.
                          items:
                            $ref: '#/components/schemas/Apple_Quick_Reply_Items'
                  required:
                    - quick-reply

    Apple_List_Picker_Message:
      allOf:
        - $ref: '#/components/schemas/AppleInteractiveMessage'
        - type: object
          description: a [ListPicker](https://register.apple.com/resources/messages/msp-rest-api/type-interactive#list-picker-message) message
          properties:
            interactiveData:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    listPicker:
                      type: object
                      properties:
                        sections:
                          type: array
                          items:
                            $ref: '#/components/schemas/AppleListPickerSection'
                      required:
                        - sections
                  required:
                    - listPicker

    Apple_Location:
      type: object
      properties:
        title:
          type: string
        latitude:
          type: number
        longitude:
          type: number
        radius:
          type: number

    Apple_Timeslot:
      type: object
      properties:
        duration:
          type: integer
        identifier:
          type: string
        startTime:
          description: A UTC date string, represented by a valid date in ISO-8601 format and specified as absolute GMT +0000 date
          type: string
          format: date-time
      required:
        - duration
        - identifier
        - startTime

    Apple_Time_Picker_Message:
      allOf:
        - $ref: '#/components/schemas/AppleInteractiveMessage'
        - type: object
          description: a [TimePicker](https://register.apple.com/resources/messages/msp-rest-api/type-interactive#time-picker-message) message
          properties:
            interactiveData:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    event:
                      type: object
                      properties:
                        identifier:
                          type: string
                        imageIdentifier:
                          type: string
                        location:
                          $ref: '#/components/schemas/Apple_Location'
                        timeslots:
                          type: array
                          items:
                            $ref: '#/components/schemas/Apple_Timeslot'
                        timezoneOffset:
                          type: integer
                        title:
                          type: string
                      required:
                        - identifier
                  required:
                    - event

    Apple_iMessage_App_Message:
      description: an [iMessage App](https://register.apple.com/resources/messages/msp-rest-api/type-interactive#imessage-app) message
      type: object
      properties:
        type:
          type: string
          enum: [interactive]
        interactiveData:
          type: object
          properties:
            bid:
              description: a bid that references your apple extension.
              type: string
              enum:
                - com.apple.messages.MSMessageExtensionBalloonPlugin:{team-id}:{ext-bundle-id}
            receivedMessage:
              $ref: '#/components/schemas/AppleReceivedMessage'
            replyMessage:
              $ref: '#/components/schemas/AppleReplyMessage'
            appIcon:
              type: string
              format: byte
              description: A Base64-encoded string representing the app icon of the iMessage app.
            appId:
              type: string
              description:  The App Store identifier of the iMessage app.
            appName:
              type: string
              description: The name of the iMessage app.
            URL:
              type: string
              format: uri
              description: A URL string containing data that the Messages app sends to the iMessage app.
            useLiveLayout:
              type: boolean
              default: true
              description: A Boolean that determines whether the Messages app should use Live Layout. 
          required:
            - bid
            - receivedMessage
            - replyMessage
            - appIcon
            - appId
            - appName
            - URL
            - useLiveLayout
      required:
        - type
        - interactiveData

    Apple_Form_Page:
      type: object
      properties:
        pageIdentifier:
          type: string
        title:
          type: string
        subtitle:
          type: string
        nextPageIdentifier:
          type: string
        submitForm:
          type: boolean
          description: XXX Required or not ?
      required:
        - pageIdentifier
        - type
        - subtitle
        - nextPageIdentifier

    Apple_Form_Select_Page:
      allOf:
        - $ref: '#/components/schemas/Apple_Form_Page'
        - type: object
          properties:
            type:
              type: string
              enum: [select]
            multipleSelection:
              type: boolean
              default: false
            items:
              type: array
              items:
                type: object
                properties:
                  title:
                    type: string
                  value:
                    type: string
                  identifier:
                    type: string
                  imageIdentifier:
                    type: string
                  nextPageIdentifier:
                    type: string
                required:
                  - identifier
          required:
            - type
            - items

    Apple_Form_Picker_Page:
      allOf:
        - $ref: '#/components/schemas/Apple_Form_Page'
        - type: object
          properties:
            type:
              type: string
              enum: [picker]
            pickerTitle:
              type: string
              default: ""
            selectedItemIndex:
              type: integer
              default: 0
            items:
              type: array
              items:
                type: object
                properties:
                  identifier:
                    type: string
                  title:
                    type: string
                  value:
                    type: string
                required:
                  - identifier
          required:
            - type
            - items

    Apple_Form_Date_Picker_Page:
      allOf:
        - $ref: '#/components/schemas/Apple_Form_Page'
        - type: object
          properties:
            type:
              type: string
              enum: [datePicker]
            hintText:
              type: string
            options:
              type: object
              properties:
                dateFormat:
                  type: string
                  default: MM/dd/yyyy
                startDate:
                  type: string
                minimumDate:
                  type: string
                maximumDate:
                  type: string
                labelText:
                  type: string
                  default: Date
              required:
                - identifier
          required:
            - type

    Apple_Form_Input_Page:
      allOf:
        - $ref: '#/components/schemas/Apple_Form_Page'
        - type: object
          properties:
            type:
              type: string
              enum: [input]
            hintText:
              type: string
            options:
              type: object
              properties:
                regex:
                  type: string
                placeholder:
                  type: string
                required:
                  type: boolean
                  default: false
                inputType:
                  type: string
                  enum: [singleline, multiline]
                labelText:
                  type: string
                prefixText:
                  type: string
                maximumCharacterCount:
                  type: integer
                keyboardType:
                  type: string
                  enum: [default, asciiCapable, numbersAndPunctuation, URL, numberPad, phonePad, namePhonePad, emailAddress, decimalPad, UIKeyboardTypeTwitter, webSearch]
                textContentType:
                  type: string
                  enum: [name, namePrefix, givenName, middleName, familyName, nameSuffix, nickname, jobTitle, organizationName, location, fullStreetAddress, streetAddressLine1, streetAddressLine2, addressCity, addressState, addressCityAndState, sublocality, countryName, postalCode, telephoneNumber, emailAddress, URL, creditCardNumber, username, password, newPassword, oneTimeCode]
          required:
            - type

    Apple_Form_Data:
      type: object
      properties:
        splash:
          type: object
          properties:
            header:
              type: string
            splashText:
              type: string
            buttonTitle:
              type: string
            imageIdentifier:
              type: string
          required:
           - buttonTitle
        startPageIdentifier:
          type: string
        private:
          type: boolean
          default: false
        showSummary:
          type: boolean
          default: false
        pages:
          type: array
          items:
            oneOf:
              - $ref: '#/components/schemas/Apple_Form_Select_Page'
              - $ref: '#/components/schemas/Apple_Form_Picker_Page'
              - $ref: '#/components/schemas/Apple_Form_Date_Picker_Page'
              - $ref: '#/components/schemas/Apple_Form_Input_Page'
      required:
        - startPageIdentifier

    Apple_Dynamic:
      type: object
      properties:
        version:
          type: string
          enum: [1.1]
        template:
          type: string
          enum: [messageForms]
        data:
          $ref: '#/components/schemas/Apple_Form_Data'
      required:
        - version
        - template
        - data

    Apple_Form_Message:
      allOf:
        - $ref: '#/components/schemas/AppleInteractiveMessage'
        - type: object
          description: a [Form](https://register.apple.com/resources/messages/msp-rest-api/type-interactive#form-message) message
          properties:
            interactiveData:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    dynamic:
                      $ref: '#/components/schemas/Apple_Dynamic'
                  required:
                    - dynamic

    Apple_Authentication_Message:
      allOf:
        - $ref: '#/components/schemas/AppleInteractiveMessage'
        - type: object
          description: an [authentication message](https://register.apple.com/resources/messages/msp-rest-api/type-interactive#authentication-message).
          properties:
            interactiveData:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    authenticate:
                      type: object
                      properties:
                        oauth2:
                          type: object
                          properties:
                            clientSecret:
                              type: string
                              description: A string indicating the secret provisioned by the authorization server.
                            responseEncryptionKey:
                              type: string
                              description: A string indicating the Base64-encoded public key that encrypts the access token returned in the response.
                            responseType:
                              type: string
                              enum: [code]
                              description: A string indicating the type of authentication request.
                            scope:
                              type: array
                              description: An array of scope items that specifies the scope of the request.This dictionary entry gives the exact fields of data that the authentication service provides to the client requesting the authentication.
                              items:
                                type: string
                            state:
                              type: string
                              description: A string indicating the state of the authentication request.
                          required: [responseType, scope, state, responseEncryptionKey, clientSecret]
                      required: [oauth2]
                  required: [authenticate]

    ApplePayEndpoints:
      type: object
      properties:
        paymentGatewayUrl:
          type: string
          format: uri
          description: Called by Apple Pay to process the payment through the payment provider. The URL should match the URL in the initiativeContext field of the payment session.
        fallbackUrl:
          type: string
          format: uri
          description: A URL that opens in a web browser so the customer can complete the purchase if their device is unable to make payments using Apple Pay.
        orderTrackingUrl:
          type: string
          format: uri
          description: Called by Messages for Business after completing the order; provides you with an opportunity to update the order information in your system.
        paymentMethodUpdateUrl:
          type: string
          format: uri
          description: Called by Apple Pay when the customer changes the payment method. If you don’t implement this endpoint and you include this key in the dictionary, the customer sees an error message.
        shippingContactUpdateUrl:
          type: string
          format: uri
          description: Called by Apple Pay when the customer changes their shipping address information. If you don’t implement this endpoint and you include this key in the dictionary, the customer sees an error message.
        shippingMethodUpdateUrl:
          type: string
          format: uri
          description: Called by Apple Pay when the customer changes the shipping method. If you don’t implement this endpoint and you include this key in the dictionary, the customer sees an error message.
      required: [paymentGatewayUrl]

    ApplePayMerchantSession:
      type: object
      properties:
        displayName:
          type: string
          description: The canonical name for your store, suitable for display and consisting of 64 or fewer UTF-8 characters. Do not localize the name.
        epochTimestamp:
          type: string
          description: The time representation in number of seconds that have elapsed since 00:00:00 UTC, Thursday, January 1, 1970.
        expiresAt:
          type: string
          description: The expiration time representation in number of seconds that have elapsed since 00:00:00 UTC, Thursday, January 1, 1970.
        initiative:
          type: string
          description: A predefined value that identifies the e-commerce application making the request.
          enum: [messaging]
        initiativeContext:
          type: string
          format: uri
          description: Your payment gateway URL. 
        merchantIdentifier:
          type: string
          description: A unique identifier that represents a merchant for Apple Pay.
        merchantSessionIdentifier:
          type: string
          description: A unique identifier that represents a merchant's session for Apple Pay.
        nonce:
          type: string
          format: byte
          description: XXX. The type of this field is currently undocumented and unknown
        signature:
          type: string
          format: byte
          description: XXX. The type of this field is currently undocumented and unknown
      required: [displayName, epochTimestamp, expiresAt, initiative, initiativeContext, merchantIdentifier, merchantSessionIdentifier]


    AppleContactFields:
      description: a list of [contact field](https://developer.apple.com/documentation/apple_pay_on_the_web/applepaycontactfield)
      type: array
      items:
        type: string
        enum: [email, name, phone, postalAddress, phoneticName]


    ApplePayDateComponent:
      description: a [DateComponents](https://developer.apple.com/documentation/apple_pay_on_the_web/applepaydatecomponents)
      type: object
      properties:
        years:
          type: integer
        months:
          type: integer
        days:
          type: integer
        hours:
          type: integer


    ApplePayShippingMethod:
      type: object
      properties:
        label:
          type: string
        detail:
          type: string
        amount:
          type: string
        identifier:
          type: string
        dateComponentsRange:
          type: object
          properties:
            startDateComponents:
              $ref: '#/components/schemas/ApplePayDateComponent'
            endDateComponents:
              $ref: '#/components/schemas/ApplePayDateComponent'
      required: [label, detail, amount, identifier]

    ApplePayLineItem:
      description: a [Line item](https://developer.apple.com/documentation/apple_pay_on_the_web/applepaylineitem)
      type: object
      properties:
        type:
          type: string
          enum: [final, pending]
        label:
          type: string
        amount:
          type: string
        paymentTiming:
          type: string
          enum: [immediate, recurring, deferred, automaticReload]
        recurringPaymentStartDate:
          type: string
          description: XXX. ubnknown
        recurringPaymentIntervalUnit:
          type: string
          enum: [year, month, day, hour, minute]
        recurringPaymentIntervalCount:
          type: integer
          minimum: 0
        recurringPaymentEndDate:
          type: string
          description: XXX. uinknown
        deferredPaymentDate:
          type: string
          description: XXX. uinknown
        automaticReloadPaymentThresholdAmount:
          type: string

    ApplePayApplePay:
      type: object
      properties:
        merchantCapabilities:
          type: array
          items:
            type: string
            enum: [supports3DS, supportsCredit, supportsDebit, supportsEMV]
        merchantIdentifier:
          type: string
          description: A unique identifier that represents a merchant for Apple Pay.
        supportedNetworks:
          type: string
          enum: [amex, bancomat, bancontact, cartesBancaires, chinaUnionPay, dankort, discover, eftpos, electron, elo, girocard, interac, jcb, mada, maestro, masterCard, mir, privateLabel, visa, vPay]
      required: [merchantIdentifier]


    ApplePayPaymentRequest:
      type: object
      properties:
        applePay:
          $ref: '#/components/schemas/ApplePayApplePay'
        countryCode:
          $ref: '#/components/schemas/AppleCountryCode'
        currencyCode:
          $ref: '#/components/schemas/AppleCurrencyCode'
        lineItems:
          description: An array of line items explaining payments and additional charges.
          type: array
          items:
            $ref: '#/components/schemas/ApplePayLineItem'
        requiredBillingContactFields:
          $ref: '#/components/schemas/AppleContactFields'
        requiredShippingContactFields:
          $ref: '#/components/schemas/AppleContactFields'
        shippingMethods:
          type: array
          items:
            $ref: '#/components/schemas/ApplePayShippingMethod'
        supportedCountries:
          type: array
          items:
            $ref: '#/components/schemas/AppleCountryCode'
        total:
          $ref: '#/components/schemas/ApplePayLineItem'
      required: [applePay, countryCode, currencyCode, lineItems, total]


    Apple_Pay_Message:
      allOf:
        - $ref: '#/components/schemas/AppleInteractiveMessage'
        - type: object
          description: an [apple pay message](https://register.apple.com/resources/messages/msp-rest-api/type-interactive#apple-pay-message)
          properties:
            interactiveData:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    payment:
                      type: object
                      properties:
                        endpoints:
                          $ref: '#/components/schemas/ApplePayEndpoints'
                        merchantSession:
                          $ref: '#/components/schemas/ApplePayMerchantSession'
                        paymentRequest:
                          $ref: '#/components/schemas/ApplePayPaymentRequest'
                      required: [endpoints, merchantSession, paymentRequest]
                  required: [payment]



    Apple_Message:
      description: A message sent by a brand to a user.
      oneOf:
        - $ref: '#/components/schemas/Apple_Text_Message'
        - $ref: '#/components/schemas/Apple_Rich_Link_Message'
        - $ref: '#/components/schemas/Apple_Quick_Reply_Message'
        - $ref: '#/components/schemas/Apple_List_Picker_Message'
        - $ref: '#/components/schemas/Apple_Time_Picker_Message'
        - $ref: '#/components/schemas/Apple_iMessage_App_Message'
        - $ref: '#/components/schemas/Apple_Form_Message'
        - $ref: '#/components/schemas/Apple_Authentication_Message'
        - $ref: '#/components/schemas/Apple_New_Authentication_Message'
        - $ref: '#/components/schemas/Apple_Pay_Message'


security:
  - basic_auth: []

paths:

  /uploaded-tabular-data:
    get:
      servers:
        - url: https://api.alcmeon.com
          description: Host for tabular data
      tags:
        - Helpers
      summary: Return uploaded data
      description: >
        After a user successfully uploads excel data for a subbot (the data sheet formats
        have been validated against the format expected by the subbot), the data
        can be downloaded from the subbot by invoking this endpoint.

      responses:
        "200":
          description: Return a 200 status on success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TabularArrays'

  /description:
    get:
      tags:
        - Configuration
      summary: Describe configuration
      description: >
        Whenever a new bot box is added to a scenario, we `GET /description`
        to obtain a description of the bot output connectors, parameters, etc. 


        This endpoint can also be invoked at other times during the bot lifecycle. 

      responses:
        "200":
          description: >
            Return a 200 status to indicate that the data was received successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Description'

  /start:
    post:
      tags: 
        - Runtime
      summary: Handle first event
      description: >
        Whenever a user enters a box via its input connector, this endpoint will 
        be invoked via `POST URL/start`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartEventRequest'
      responses:
        "200":
          description: >
            Return a 200 status to indicate that the data was received successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotResponse'

  /handle-event:
    post:
      tags: 
        - Runtime
      summary: Handle other events
      description: >
        Whenever a user interacts with a bot box after entering via input 
        connector, this endpoint will be invoked via `POST URL/handle-event`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HandleEventRequest'
      responses:
        "200":
          description: >
            Return a 200 status to indicate that the data was received successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotResponse'

  /end:
    post:
      tags: 
        - Runtime
      summary: Handle errors
      description: >
        `POST URL/end` is invoked whenever Alcméon thinks the bot box did something 
        wrong and took the “failed” output connector. It is not an error if it is 
        not implemented. Its return value is ignored.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_external_id:
                  type: string
                  description: The raw id of the user in the underlying social network API
      responses:
        "200":
          description: >
            Return a 200 status to indicate that the data was received successfully.
