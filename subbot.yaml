openapi: 3.0.0
info:
  title: Subbot API
  version: '1.0'

x-readme:
  explorer-enabled: false

components:

  securitySchemes:
    basic_auth:
      type: http
      scheme: basic

  schemas:

    HandleEventRequestVariables:
      type: object
      properties:
        variables:
          type: object
          description: >
            The variables which were returned from the last call to
            the /handle-event or /start endpoint

    JwtEventRequest:
      type: object
      properties:
        jwt:
          type: string
          description: >
            The JWT that can be used to call the /continue endpoint within the lext 60 seconds.
            This JWT can be used to /continue an interaction with a specific user for
            a specific subbot box instance in a scenario. It can be used more than once within
            its validity delay. You cannot reuse a JWT received for user A 
            to /continue an interaction with another user B.

    Handle_Event_RequestV3:
      allOf:
        - $ref: '#/components/schemas/EventRequestV2'
        - $ref: '#/components/schemas/HandleEventRequestVariables'
        - $ref: '#/components/schemas/JwtEventRequest'

    Handle_Event_RequestV2:
      allOf:
        - $ref: '#/components/schemas/EventRequestV2'
        - $ref: '#/components/schemas/HandleEventRequestVariables'

    Handle_Event_RequestV1:
      allOf:
        - $ref: '#/components/schemas/EventRequestV1'
        - $ref: '#/components/schemas/HandleEventRequestVariables'

    Handle_Event_Request:
      oneOf:
        - $ref: '#/components/schemas/Handle_Event_RequestV1'
        - $ref: '#/components/schemas/Handle_Event_RequestV2'
        - $ref: '#/components/schemas/Handle_Event_RequestV3'

    StartEventRequestGlobalVaribles:
      type: object
      properties:
        global_variables:
          type: object
          description: >
            A set of conversation variables that the bot box can read. 
            Only variables specified in Description.input_variables are available.

    Start_Event_RequestV3:
      allOf:
        - $ref: '#/components/schemas/EventRequestV2'
        - $ref: '#/components/schemas/StartEventRequestGlobalVaribles'
        - $ref: '#/components/schemas/JwtEventRequest'

    Start_Event_RequestV2:
      allOf:
        - $ref: '#/components/schemas/EventRequestV2'
        - $ref: '#/components/schemas/StartEventRequestGlobalVaribles'

    Start_Event_RequestV1:
      allOf:
        - $ref: '#/components/schemas/EventRequestV1'
        - $ref: '#/components/schemas/StartEventRequestGlobalVaribles'

    Start_Event_Request:
      oneOf:
        - $ref: '#/components/schemas/Start_Event_RequestV1'
        - $ref: '#/components/schemas/Start_Event_RequestV2'
        - $ref: '#/components/schemas/Start_Event_RequestV3'

    BotResponse:
      type: object
      properties:
        variables:
          type: object
          description: The per-box/per-conversation variables that the bot wishes to store until a later call to URL/start or URL/event
        messages:
          description: >
            A list of MessageResponse which will be sent by Alcmeon on behalf of the subbot.
            These messages will be sent before the `exit` field is processed.
            If no messages should be sent, an empty array is expected
          type: array
          items:
            $ref: '#/components/schemas/MessageResponse'
        exit:
          description: >
            A description of the output connector Alcméon should take to exit this bot box. 
            If null, no exit will be taken and the next messenge/event sent by a user
            will be forwarded to the same subbot via its handle-event endpoint.
            This field is processed after any messages from the `messages` field are sent.
          $ref: '#/components/schemas/ExitResponse'

    ExitResponse:
      type: object
      properties:
        delay_ms:
          type: integer
          description: >
            The number of milliseconds until Alcméon executes this response.
            A convenient way to insert a delay before exiting the box.
        global_variables:
          type: object
          description: >
            A set of variables that Alcméon should copy in the per/user 
            conversation variables. Only variables specified in 
            Description.output_variables will be taken into account. 
            All other variables will be ignored.
        reason:
          description: The name of the output connector to exit through. This field should match Description.exits.name
          type: string

    Exit:
      type: object
      properties:
        name:
          type: string
          description: The unique name of the output connector.
        description:
          type: string
          description: >
            A human-readable description of what it means to exit 
            the bot box via this output connector. Displayed in the Alcméon editor GUI.

    Variable:
      type: object
      properties:
        name:
          type: string
          description: The unique name of the user conversation variable
        description:
          type: string
          description: >
            A human-readable description of the meaning of 
            the content of this variable. Displayed in the Alcméon editor GUI.

    IntegerParameterSpecification:
      type: object
      properties:
        min:
          description: All parameter values should be such that value >= min
          type: integer
        max:
          description: All parameter values should be such that value < max
          type: integer

    FloatParameterSpecification:
      type: object
      properties:
        min:
          description: All parameter values should be such that value >= min
          type: number
        max:
          description: All parameter values should be such that value < max
          type: number

    StringParameterSpecification:
      type: object
      properties:
        regexp:
          type: string
          description: >
            A regular expression that constrains the values allowed. 
            This regular expression should match the [Javascript syntax](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)

    FileParameterSpecification:
      type: object
      properties:
        mime_types:
          description: The list of mime types allowed for this file
          type: array
          items:
            type: string

    ExcelFileSheetHeaderParameterSpecification:
      type: object
      properties:
        name:
          description: Name of header
          type: string
        type:
          description: >
            Type of header. The following types are supported:
              - integer: any positive or negative integers.
              - float: any positive or negative floats.
              - string: any string
              - url: a string, formatted as a url. Only http:// and https:// urls are supported.
              - datetime: a datetime in YYYY-MM-DDTHH:MM:SS+0 format (GMT)
              - url_to_shorten: a string, formatted as a url. Only http:// and https:// urls are supported.
                Any cell within a column of this type will be replaced by a shortened version before
                being stored for use by a subbot
          type: string
          enum: [integer, float, string, url, datetime, url_to_shorten]
        is_mandatory:
          description: If true, mandatory a file that is missing the header cannot be uploaded successfully.
          type: boolean
          default: false

    ExcelFileSheetParameterSpecification:
      type: object
      properties:
        headers:
          type: array
          items:
            $ref: '#/components/schemas/ExcelFileSheetHeaderParameterSpecification'

    ExcelFileParameterSpecification:
      description: If the content of a cell does not match the type of its header, the file will be rejected during upload.
      type: object
      properties:
        sheets:
          type: array
          items:
            $ref: '#/components/schemas/ExcelFileSheetParameterSpecification'

    EnumParameterSpecification:
      type: object
      properties:
        values:
          description: >
            The list of values that can be chosen for this parameter. 
            The bot editor GUI will display this list in a dropdown for selection.
          type: array
          items:
            type: string

    FileParameterValue:
      type: object
      description: The value for parameters of type `file`
      properties:
        url:
          type: string
          format: uri
          description: "Where to download the file. This url should not be cached: it is valid for less than 30 seconds."
        cache_key:
          type: string
          description: A unique id which can be used as the key to cache the file downloaded from the url. This id is warranted to change if the file is changed by the user.

    TabularArraysParameterValue:
      type: object
      description: The value for parameters of type `excel`
      properties:
        url:
          type: string
          format: uri
          description: >
            Where to download the file. This url should not be cached.
            It is valid for less than 30 seconds. This url is the full
            url to the [GET /uploaded-tabular-data](ref:get_uploaded-tabular-data) endpoint.
        cache_key:
          type: string
          description: A unique id which can be used as the key to cache the file downloaded from the url. This id is warranted to change if the file is changed by the user.

    TabularArrayCellInteger:
      type: integer
      description: A cell which contains a value for a header of type `integer`

    TabularArrayCellFloat:
      type: number
      description: A cell which contains a value for a header of type `float`

    TabularArrayCellString:
      type: string
      description: A cell which contains a value for a header of type `string`

    TabularArrayCellUrl:
      type: string
      format: uri
      description: A cell which contains a value for a header of type `url`

    TabularArrayCellDatetime:
      type: string
      format: datetime
      description: >
        A cell which contains a value for a header of type `datetime`.
        Format is "YYYY-MM-DDTHH:MM:SS+0" (GMT)

    TabularArrayCellShortenedUrl:
      type: string
      format: uri
      description: A cell which contains a value for a header of type `url_to_shorten`. i.e., a shortened url.

    TabularArrayCell:
      oneOf:
        - $ref: '#/components/schemas/TabularArrayCellInteger'
        - $ref: '#/components/schemas/TabularArrayCellFloat'
        - $ref: '#/components/schemas/TabularArrayCellString'
        - $ref: '#/components/schemas/TabularArrayCellUrl'
        - $ref: '#/components/schemas/TabularArrayCellDatetime'
        - $ref: '#/components/schemas/TabularArrayCellShortenedUrl'

    TabularArrayRow:
      type: array
      items:
        $ref: '#/components/schemas/TabularArrayCell'

    TabularArrayHeader:
      description: A header for a column
      type: object
      properties:
        name:
          type: string
        type:
          type: string
    

    TabularArray:
      type: object
      properties:
        headers:
          type: array
          items:
            $ref: '#/components/schemas/TabularArrayHeader'
        rows:
          type: array
          items:
            $ref: '#/components/schemas/TabularArrayRow'

    TabularArrays:
      type: object
      description: user data uploaded as excel, converted to a set of tabular arrays, one for each excel sheet.
      properties:
        arrays:
          type: array
          items:
            $ref: '#/components/schemas/TabularArray'

    StringParameterValue:
      type: string
      description: The value for parameters of type `string`

    FloatParameterValue:
      type: number
      description: The value for parameters of type `float`

    IntegerParameterValue:
      type: integer
      description: The value for parameters of type `integer`

    BooleanParameterValue:
      type: boolean
      description: The value for parameters of type `boolean`

    UrlParameterValue:
      type: string
      format: uri
      description: The value for parameters of type `url`

    EnumParameterValue:
      type: string
      description: The value for parameters of type `enum`

    ParameterValue:
      description: A value for a parameter
      nullable: true
      oneOf:
        - $ref: '#/components/schemas/StringParameterValue'
        - $ref: '#/components/schemas/FloatParameterValue'
        - $ref: '#/components/schemas/IntegerParameterValue'
        - $ref: '#/components/schemas/BooleanParameterValue'
        - $ref: '#/components/schemas/UrlParameterValue'
        - $ref: '#/components/schemas/EnumParameterValue'
        - $ref: '#/components/schemas/FileParameterValue'
        - $ref: '#/components/schemas/TabularArraysParameterValue'

    Parameter:
      type: object
      properties:
        type:
          type: string
          enum: [integer, float, boolean, string, url, enum, file, excel]
          description: The type of the parameter
        name:
          type: string
          description: The unique name of the box parameter
        description:
          type: string
          description: >
            A human-readable description of the meaning of the content of 
            this parameter. Displayed in the Alcméon editor GUI.
        default:
          $ref: '#/components/schemas/ParameterValue'
        specification:
          $ref: '#/components/schemas/ParameterSpecification'

    ParameterSpecification:
      description: >
        This field contains a type-specific dictionary that describes 
        the set of values allowed for this parameter.


        This field can be set to null or an empty dictionary to indicate 
        that no specific constraints exist for this parameter.
      nullable: true            
      oneOf:
        - $ref: '#/components/schemas/IntegerParameterSpecification'
        - $ref: '#/components/schemas/FloatParameterSpecification'
        - $ref: '#/components/schemas/StringParameterSpecification'
        - $ref: '#/components/schemas/FileParameterSpecification'
        - $ref: '#/components/schemas/ExcelFileParameterSpecification'
        - $ref: '#/components/schemas/EnumParameterSpecification'

    Description:
      type: object
      properties:
        name:
          type: string
          description: The name of the bot. It will be displayed in the Alcméon editor GUI
        version:
          type: string
          description: Which version of the subbot protocol this subbot supports. If this is not specified, we assume the subbot supports the v1 API.
          enum: [v1, v2, v3]
          default: v1
        description:
          type: string
          description: A human-readable description of what the bot does. Displayed in the Alcméon editor GUI
        exits:
          description: A list of Exit objects, each of which describes an output connector for the bot.
          type: array
          items:
            $ref: '#/components/schemas/Exit'
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/Parameter'
          description: >
            A list of Parameter objects, each of which describes an attribute that can be 
            configured within the Alcméon editor GUI for a box instance.
        input_variables:
          description: >
            A list of Variable objects, each of which describes a user conversation 
            variable that can be read by the bot when a user enters a box via the 
            input connector.
          type: array
          items:
            $ref: '#/components/schemas/Variable'
        output_variables:
          description: >
            A list of Variable objects, each of which describes a user conversation 
            variable that can be written to by the bot when a user exits a box via 
            one of the bot-specific output connector.
          type: array
          items:
            $ref: '#/components/schemas/Variable'
        backends:
          description: >
            A list of backend names that this bot supports. If no value is specified, 
            this bot supports them all.
          type: array
          items:
            $ref: '#/components/schemas/Backend'
        companies:
          description: >
            A list of Alcméon customer names that this bot supports. 
            If no value is specified, this box will be made available to all customers.
          type: array
          items:
            type: string

    ##################################################
    # The core API objects where you need to add new
    # items if you add a new type of backend
    ##################################################

    Backend:
      type: string
      enum:
        - facebook
        - twitter
        - whatsapp
        - gbm
        - webchat

    EventRequestV1:
      type: object
      properties:
        backend:
          $ref: '#/components/schemas/Backend'
          description: The name of the backend this event is generated for
        parameters:
          type: object
          description: The set of key/value pairs associated with the per-box description parameters.
        user_external_id:
          type: string
          description: The raw id of the user in the underlying social network API
        user_name:
          type: string
          description: A user name associated with the underlying social network API
        event:
          oneOf:
            - $ref: '#/components/schemas/MessengerEvent'
            - $ref: '#/components/schemas/TwitterEvent'
            - $ref: '#/components/schemas/Whatsapp_Event'
            - $ref: '#/components/schemas/GbmEvent'
            - $ref: '#/components/schemas/WebChatEvent'
            - $ref: 'subbot-bzc.yaml#/components/schemas/Apple_Event'
      required:
        - backend
        - parameters
        - user_external_id
        - user_name
        - event


    EventRequestV2:
      type: object
      description: This object is identical to EventRequestv1, except that the parameters field has been updated to support file parameter values
      properties:
        backend:
          $ref: '#/components/schemas/Backend'
          description: The name of the backend this event is generated for
        parameters:
          type: array
          items:
            description: The set of key/value pairs associated with the per-box description parameters.
            type: object
            properties:
              key:
                type: string
              value:
                $ref: '#/components/schemas/ParameterValue'
        user_external_id:
          type: string
          description: The raw id of the user in the underlying social network API
        user_name:
          type: string
          description: A user name associated with the underlying social network API
        event:
          oneOf:
            - $ref: '#/components/schemas/MessengerEvent'
            - $ref: '#/components/schemas/TwitterEvent'
            - $ref: '#/components/schemas/Whatsapp_Event'
            - $ref: '#/components/schemas/GbmEvent'
            - $ref: '#/components/schemas/WebChatEvent'
            - $ref: 'subbot-bzc.yaml#/components/schemas/Apple_Event'
            - $ref: 'subbot-instagram.yaml#/components/schemas/Instagram_Event'
      required:
        - backend
        - parameters
        - user_external_id
        - user_name
        - event

    MessageResponse:
      type: object
      properties:
        delay_ms:
          type: integer
          description: >
            The number of milliseconds until Alcméon executes this response.
            A convenient way to insert a delay before exiting the box.
        body:
          description: >
            An object that matches the structure of the underlying social media message format.
          oneOf:
            - $ref: '#/components/schemas/MessengerMessage'
            - $ref: '#/components/schemas/TwitterMessage'
            - $ref: '#/components/schemas/Whatsapp_Message'
            - $ref: '#/components/schemas/GbmMessage'
            - $ref: '#/components/schemas/WebChatMessage'
            - $ref: 'subbot-bzc.yaml#/components/schemas/Apple_Message'
            - $ref: 'subbot-instagram.yaml#/components/schemas/Instagram_Message'

    ##################################################
    # Messenger objects
    ##################################################

    MessengerUrlButton:
      description: >
        A [UrlButton](https://developers.facebook.com/docs/messenger-platform/reference/buttons/url)
      type: object
      properties:
        type:
          type: string
          enum: [web_url]
        title:
          type: string
          maxLength: 20
        url:
          type: string
          format: uri
        webview_height_ratio:
          type: string
          enum: [compact, tall, full]
        messenger_extensions:
          type: boolean
        fallback_url:
          type: string
          format: uri
        webview_share_button:
          type: string
          enum: [hide]
          nullable: true

    MessengerPostbackButton:
      description: >
        A [Postback button](https://developers.facebook.com/docs/messenger-platform/reference/buttons/postback)
      type: object
      properties:
        type:
          type: string
          enum: [postback]
        title:
          type: string
          maxLength: 20
        payload:
          description: The Messenger Length limit for this field is 1000 but we restrict it to 900.
          type: string
          maxLength: 900

    MessengerCallButton:
      description: >
        A [Call button](https://developers.facebook.com/docs/messenger-platform/reference/buttons/call)
      type: object
      properties:
        type:
          type: string
          enum: [phone_number]
        title:
          type: string
          maxLength: 20
        payload:
          type: string

    MessengerLoginButton:
      description: >
        A [Login button](https://developers.facebook.com/docs/messenger-platform/reference/buttons/login)
      type: object
      properties:
        type:
          type: string
          enum: [account_link]
        url:
          type: string
          format: uri

    MessengerLogoutButton:
      description: >
        A [Logout button](https://developers.facebook.com/docs/messenger-platform/reference/buttons/logout)
      type: object
      properties:
        type:
          type: string
          enum: [account_unlink]

    MessengerGamePlayButton:
      description: >
        A [Game play button](https://developers.facebook.com/docs/messenger-platform/reference/buttons/game-play)
      type: object
      properties:
        type:
          type: string
          enum: [game_play]
        title:
          type: string
        payload:
          type: string
        game_metadata:
          type: object
          properties:
            player_id:
              type: string
            context_id:
              type: string
      

    MessengerButton:
      description: >
        A [Button](https://developers.facebook.com/docs/messenger-platform/send-messages/buttons)
      oneOf:
        - $ref: '#/components/schemas/MessengerUrlButton'
        - $ref: '#/components/schemas/MessengerPostbackButton'
        - $ref: '#/components/schemas/MessengerCallButton'
        - $ref: '#/components/schemas/MessengerLoginButton'
        - $ref: '#/components/schemas/MessengerLogoutButton'
        - $ref: '#/components/schemas/MessengerGamePlayButton'
      
    MessengerButtonPayload:
      description: >
        A [payload field](https://developers.facebook.com/docs/messenger-platform/reference/templates/button#payload)
        of a Button template.
      type: object
      properties:
        template_type:
          type: string
          enum: [button]
        text:
          type: string
          maxLength: 640
        buttons:
          type: array
          items:
            $ref: '#/components/schemas/MessengerButton'

    MessengerMessage:
      description: >
        On Messenger, a trimmed down version of the 
        [message](https://developers.facebook.com/docs/messenger-platform/reference/send-api#message) object.
      type: object
      properties:
        text:
          description: Message text.
          type: string
          maxLength: 2000
        attachment:
          type: object
          properties:
            type:
              type: string
              enum: [template]
            payload:
              oneOf:
                - $ref: '#/components/schemas/MessengerButtonPayload'
        quick_replies:
          type: array
          items:
            description: >
              A [quick_reply](https://developers.facebook.com/docs/messenger-platform/reference/buttons/quick-replies#quick_reply) object
            type: object
            properties:
              content_type:
                type: string
                enum: [text, user_phone_number, user_email]
              title:
                type: string
                maxLength: 20
              payload:
                description: The Messenger Length limit for this field is 1000 but we restrict it to 900.
                type: string
                maxLength: 900
              image_url:
                type: string
                format: url
            
    MessengerEvent:
      description: >
        On Messenger, a trimmed down version of the
        [message](https://developers.facebook.com/docs/messenger-platform/reference/webhook-events/messages),
        [messaging_postback](https://developers.facebook.com/docs/messenger-platform/reference/webhook-events/messaging_postbacks), and,
        [messaging_account_linking](https://developers.facebook.com/docs/messenger-platform/reference/webhook-events/messaging_account_linking)
        webhook events. Only the fields described below will be sent to the application.
      type: object
      properties:
        message:
          description: >
            A trimmed down version of the [messaging](https://developers.facebook.com/docs/messenger-platform/reference/webhook-events/messages#messaging) field of the `message` webhook event.
          type: object
          properties:
            text:
              type: string
              description: Text of message
            quick_reply:
              description: Optional custom data provided by the sending app
              type: object
              properties:
                payload:
                  type: string
                  description: Custom data provided by the app
        postback:
          description: >
            A trimmed version of the [postback](https://developers.facebook.com/docs/messenger-platform/reference/webhook-events/messaging_postbacks#postback) field of the `messaging_postback` webhook.
          type: object
          properties:
            payload:
              description: payload parameter that was defined with the button.
              type: string
        account_linking:
          description: >
            A trimmed down version of the [account_linking](https://developers.facebook.com/docs/messenger-platform/reference/webhook-events/messaging_account_linking#account_linking) field of the `messaging_account_linking` webhook
          type: object
          properties:
            status:
              type: string
              enum: [linked]
            authorization_code:
              type: string
              description: >
                Value of pass-through authorization_code provided in the
                [Account Linking](https://developers.facebook.com/docs/messenger-platform/account-linking/link-account) flow
  
    ##################################################
    # Twitter objects
    ##################################################

    TwitterMessage:
      description: >
        On Twitter, a [MessageDataObject](https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/sending-and-receiving/api-reference/new-event#message-data-object) object
      type: object
      properties:
        text:
          type: string
        quick_reply:
          description: >
            [QuickReply](https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/quick-replies/api-reference/options) object
          type: object
          properties:
            type:
              type: string
              enum: [options]
            options:
              type: array
              items:
                type: object
                properties:
                  label:
                    type: string
                    maxLength: 36
                  description:
                    type: string
                    maxLength: 72
                  metadata:
                    type: string
                    maxLength: 1000
        attachment:
          $ref: '#/components/schemas/TwitterAttachment'

    TwitterHashtag:
      type: array
      items:
        type: object
        properties:
          indices:
            type: array
            items:
              type: integer
          text:
            type: string

    TwitterUrl:
      type: object
      properties:
        display_url:
          type: string
        expanded_url:
          type: string
        indices:
          type: array
          items:
            type: integer
        url:
          type: string

    TwitterUserMention:
      type: object
      properties:
        id:
          type: integer
        id_str:
          type: string
        indices:
          type: array
          items:
            type: integer
        name:
          type: string
        screen_name:
          type: string

    TwitterSymbol:
      type: object
      properties:
        indices:
          type: array
          items:
            type: integer
        text:
          type: string

    TwitterSize:
      type: object
      properties:
        w:
          type: integer
        h:
          type: integer
        resize:
          type: string
          enum: [fit, crop]

    TwitterMedia:
      type: object
      properties:
        display_url:
          type: string
        expanded_url:
          type: string
        id:
          type: integer
        id_str:
          type: string
        indices:
          type: array
          items:
            type: integer
        media_url:
          type: string
        media_url_https:
          type: string
        sizes:
          type: object
          properties:
            thumb:
              $ref: '#/components/schemas/TwitterSize'
            large:
              $ref: '#/components/schemas/TwitterSize'
            medium:
              $ref: '#/components/schemas/TwitterSize'
            small:
              $ref: '#/components/schemas/TwitterSize'
        source_status_id:
          type: integer
        source_status_id_str:
          type: string
        type:
          type: string
          enum: [photo, video, animated_gif]
        url:
          type: string

    TwitterEntities:
      description: >
        An [Entities](https://developer.twitter.com/en/docs/twitter-api/v1/data-dictionary/object-model/entities#hashtags)
        object as
      type: object
      properties:
        hashtags:
          description: >
            A list of [HashTag](https://developer.twitter.com/en/docs/twitter-api/v1/data-dictionary/object-model/entities#hashtags) objects
          type: array
          items:
            $ref: '#/components/schemas/TwitterHashtag'
        media:
          description: >
            A list of [Media](https://developer.twitter.com/en/docs/twitter-api/v1/data-dictionary/object-model/entities#media) objects
          type: array
          items:
            $ref: '#/components/schemas/TwitterMedia'
        urls:
          description: >
            A list of [Url](https://developer.twitter.com/en/docs/twitter-api/v1/data-dictionary/object-model/entities#urls) objects
          type: array
          items:
            $ref: '#/components/schemas/TwitterUrl'
        user_mentions:
          description: >
            A list of [User Mention](https://developer.twitter.com/en/docs/twitter-api/v1/data-dictionary/object-model/entities#user_mentions) objects
          type: array
          items:
            $ref: '#/components/schemas/TwitterUserMention'
        symbols:
          description: >
            A list of [Symbol](https://developer.twitter.com/en/docs/twitter-api/v1/data-dictionary/object-model/entities#symbols) objects
          type: array
          items:
            $ref: '#/components/schemas/TwitterSymbol'

    TwitterEvent:
      description: >
        On Twitter, a subset of the [message_data](https://developer.twitter.com/en/docs/twitter-api/v1/direct-messages/sending-and-receiving/guides/message-create-object) object. The list of supported fields is documented below.
      type: object
      properties:
        text:
          type: string
          description: >
            The Direct Message text.
#        entities:
#          $ref: '#/components/schemas/TwitterEntities'
        quick_reply_response:
          description: >
            A [quick_reply_response](https://developer.twitter.com/en/docs/direct-messages/quick-replies/overview) object  
          type: object
          properties:
            type:
              type: string
              enum: [options]
            metadata:
              type: string
#        attachment:
#          $ref: '#/components/schemas/TwitterAttachment'

    TwitterAttachment:
      description: >
        An [attachment](https://developer.twitter.com/en/docs/direct-messages/message-attachments/overview) object


        Note: this field can be set but will be ignored for now
      type: object
      properties:
        type:
          type: string
          enum: [media]
        media:
          type: object
          properties:
            id:
              type: string


    ##################################################
    # Whatsapp objects
    ##################################################

    Whatsapp_Media:
      description: >
        a Media object. The data the url points to is cached. The cache key is the url itself.
      type: object
      properties:
        link:
          type: string
          format: uri
        caption:
          type: string
          maxLength: 1024
      required: [link]

    Whatsapp_Document_Media:
      allOf:
        - $ref: '#/components/schemas/Whatsapp_Media'
        - type: object
          properties:
            filename:
              type: string
              description: The extension of the filename will specify what format the document is displayed as in WhatsApp.

    Whatsapp_Image_Message:
      type: object
      properties:
        type:
          type: string
          enum: [image]
        image:
          $ref: '#/components/schemas/Whatsapp_Media'
      required: [type, image]

    Whatsapp_Audio_Message:
      type: object
      properties:
        type:
          type: string
          enum: [audio]
        audio:
          $ref: '#/components/schemas/Whatsapp_Media'
      required: [type, audio]

    Whatsapp_Video_Message:
      type: object
      properties:
        type:
          type: string
          enum: [video]
        video:
          $ref: '#/components/schemas/Whatsapp_Media'
      required: [type, video]

    Whatsapp_Document_Message:
      type: object
      properties:
        type:
          type: string
          enum: [document]
        document:
          $ref: '#/components/schemas/Whatsapp_Document_Media'
      required: [type, document]

    Whatsapp_Interactive_Base:
      type: object
      properties:
        type:
          type: string
          enum: [interactive]
        interactive:
          type: object
          properties:
            footer:
              type: object
              properties:
                text:
                  type: string
                  maxLength: 60
                  description: Required if footer is present. The footer content. Emojis, markdown, and links are supported.
      required: [type, interactive]

    Whatsapp_Interactive_Document_Header:
      allOf:
        - $ref: '#/components/schemas/Whatsapp_Document_Message'
        
    Whatsapp_Interactive_Image_Header:
      allOf:
        - $ref: '#/components/schemas/Whatsapp_Image_Message'
        
    Whatsapp_Interactive_Video_Header:
      allOf:
        - $ref: '#/components/schemas/Whatsapp_Video_Message'
        
    Whatsapp_Interactive_Text_Header:
      type: object
      properties:
        type:
          type: string
          enum: [text]
        text:
          type: string
          maxLength: 60
          description: Text for the header. Formatting allows emojis, but not markdown.

    Whatsapp_Interactive_Body:
      type: object
      properties:
        text:
          description: Emojis, markdown, and links are supported
          type: string
          maxLength: 1024
      required: [text]

    Whatsapp_List_Message:
      allOf:
        - $ref: '#/components/schemas/Whatsapp_Interactive_Base'
        - type: object
          properties:
            interactive:
              type: object
              properties:
                type:
                  type: string
                  enum: [list]
                header:
                  $ref: '#/components/schemas/Whatsapp_Interactive_Text_Header'
                body:
                  $ref: '#/components/schemas/Whatsapp_Interactive_Body'
                action:
                  type: object
                  properties:
                    button:
                      type: string
                      description: Emojis are supported, markdown is not.
                      maxLength: 20
                    sections:
                      type: array
                      minLength: 1
                      maxLength: 10
                      items:
                        type: object
                        properties:
                          title:
                            description: Required if the message has more than one section.
                            type: string
                            maxLength: 24
                          rows:
                            description: Limited to 10 rows across all sections.
                            type: array
                            items:
                              type: object
                              properties:
                                ID:
                                  type: string
                                  maxLength: 200
                                title:
                                  type: string
                                  maxLength: 24
                              required: [ID, title]
                        required: [rows]
                  required: [button]
              required: [type, body, action]

    Whatsapp_Product_Action:
      type: object
      properties:
        catalog_id:
          type: string
          description: Unique identifier of the Facebook catalog linked to your WhatsApp Business Account. This ID can be retrieved via Commerce Manager.
        product_retailer_id:
          type: string
          maxLength: 100
      required: [catalog_id, product_retailer_id]

    Whatsapp_Product_Message:
      allOf:
        - $ref: '#/components/schemas/Whatsapp_Interactive_Base'
        - type: object
          properties:
            interactive:
              type: object
              properties:
                type:
                  type: string
                  enum: [product]
                body:
                  $ref: '#/components/schemas/Whatsapp_Interactive_Body'
                action:
                  $ref: '#/components/schemas/Whatsapp_Product_Action'
              required: [type, action]

    Whatsapp_Product_List_Message:
      allOf:
        - $ref: '#/components/schemas/Whatsapp_Interactive_Base'
        - type: object
          properties:
            interactive:
              type: object
              properties:
                type:
                  type: string
                  enum: [product_list]
                header:
                  $ref: '#/components/schemas/Whatsapp_Interactive_Text_Header'
                body:
                  $ref: '#/components/schemas/Whatsapp_Interactive_Body'
                action:
                  allOf:
                    - $ref: '#/components/schemas/Whatsapp_Product_Action'
                    - type: object
                      properties:
                        sections:
                          type: object
                          properties:
                            title:
                              type: string
                              maxLength: 24
                            product_items:
                              type: array
                              items:
                                type: object
                                properties:
                                  product_retailer_id:
                                    type: string
                                required: [product_retailer_id]
                          required: [title, product_items]
                      required: [sections]
              required: [type, header, body, action]

    Whatsapp_Button_Message:
      allOf:
        - $ref: '#/components/schemas/Whatsapp_Interactive_Base'
        - type: object
          properties:
            interactive:
              type: object
              properties:
                type:
                  type: string
                  enum: [button]
                header:
                  oneOf:
                    - $ref: '#/components/schemas/Whatsapp_Interactive_Document_Header'
                    - $ref: '#/components/schemas/Whatsapp_Interactive_Image_Header'
                    - $ref: '#/components/schemas/Whatsapp_Interactive_Video_Header'
                    - $ref: '#/components/schemas/Whatsapp_Interactive_Text_Header'
                body:
                  $ref: '#/components/schemas/Whatsapp_Interactive_Body'
                action:
                  type: object
                  properties:
                    buttons:
                      type: array
                      items:
                        type: object
                        properties:
                          type:
                            type: string
                            enum: [reply]
                          title:
                            type: string
                            description:  Button title. It cannot be an empty string and must be unique within the message. Emojis are supported, markdown is not. 
                            maxLength: 20
                          id:
                            type: string
                            maxLength: 256
                            description: Unique identifier for your button. This ID is returned in the webhook when the button is clicked by the user. You cannot have leading or trailing spaces.
                        required: [type, id, title]
                  required: [buttons]
              required: [type, body, action]

    Whatsapp_Text_Message:
      type: object
      properties:
        type:
          type: string
          enum: [text]
        text:
          type: object
          properties:
            body:
              type: string
              description: the text of the message. See [Formatting](https://developers.facebook.com/docs/whatsapp/on-premises/reference/messages#formatting)
            preview_url:
              type: boolean
              default: false
              description: >
                If true, Whatsapp will attempt to generate a preview within the Whatsapp application.
                Note: this field is located in the text.body object on purpose, to mirror the 
                Whatsapp cloud API. We automatically convert that field to the proper field if
                using the on-premise API.
                [Limitations](https://developers.facebook.com/docs/whatsapp/api/messages/text#urls)
          required: [body]
      required: [type, text]

    Whatsapp_Message:
      description: >
        On Whatsapp, a subset of the [message](https://developers.facebook.com/docs/whatsapp/api/messages#parameters) object.
      oneOf:
        - $ref: '#/components/schemas/Whatsapp_Text_Message'
        - $ref: '#/components/schemas/Whatsapp_Image_Message'
        - $ref: '#/components/schemas/Whatsapp_Audio_Message'
        - $ref: '#/components/schemas/Whatsapp_Document_Message'
        - $ref: '#/components/schemas/Whatsapp_Video_Message'
        - $ref: '#/components/schemas/Whatsapp_List_Message'
        - $ref: '#/components/schemas/Whatsapp_Button_Message'
        - $ref: '#/components/schemas/Whatsapp_Product_Message'
        - $ref: '#/components/schemas/Whatsapp_Product_List_Message'

    Whatsapp_Text_Event:
      type: object
      required: [type, text]
      properties:
        type:
          type: string
          enum: [text]
        text:
          type: object
          required: [body]
          properties:
            body:
              type: string

    Whatsapp_Media_Event:
      type: object
      required: [link, mime_type, caption]
      properties:
        link:
          type: string
          format: uri
        mime_type:
          type: string
        caption:
          type: string

    Whatsapp_Image_Event:
      type: object
      required: [type, image]
      properties:
        type:
          type: string
          enum: [image]
        image:
         $ref: '#/components/schemas/Whatsapp_Media_Event' 

    Whatsapp_Audio_Event:
      type: object
      required: [type, audio]
      properties:
        type:
          type: string
          enum: [audio]
        audio:
         $ref: '#/components/schemas/Whatsapp_Media_Event' 

    Whatsapp_Document_Event:
      type: object
      required: [type, document]
      properties:
        type:
          type: string
          enum: [document]
        document:
         $ref: '#/components/schemas/Whatsapp_Media_Event'

    Whatsapp_Interactive_Event:
      type: object
      required: [type, interactive] 
      properties:
        type:
          type: string
          enum: [interactive]
        interactive:
          type: object
          required: [type]
          properties:
            type:
              type: string

    Whatsapp_Button_Event:
      allOf:
        - $ref: '#/components/schemas/Whatsapp_Interactive_Event'
        - type: object
          required: [interactive] 
          properties:
            interactive:
              type: object
              required: [type, button_reply]
              properties:
                type:
                  type: string
                  enum: [button_reply]
                button_reply:
                  type: object
                  required: [id, title]
                  properties:
                    id:
                      type: string
                    title:
                      type: string

    Whatsapp_List_Event:
      allOf:
        - $ref: '#/components/schemas/Whatsapp_Interactive_Event'
        - type: object
          required: [interactive] 
          properties:
            interactive:
              type: object
              required: [type, list_reply]
              properties:
                type:
                  type: string
                  enum: [list_reply]
                list_reply:
                  type: object
                  required: [id, title, description]
                  properties:
                    id:
                      type: string
                    title:
                      type: string
                    description:
                      type: string

    Whatsapp_Order_Event:
      type: object
      required: [type, order]
      properties:
        type:
          type: string
          enum: [order]
        order:
          type: object
          required: [catalog_id, product_items, text]
          properties:
            text:
              type: string
            catalog_id:
              type: string
            product_items:
              type: array
              items:
                type: object
                required: [product_retailer_id, quantity, item_price, currency]
                properties:
                  product_retailer_id:
                    type: string
                  quantity:
                    type: integer
                  item_price:
                    type: number
                  currency:
                    type: string
                    enum: [EUR]

    Whatsapp_Event:
      description: >
        On Whatsapp, a subset of the [message notifications](https://developers.facebook.com/docs/whatsapp/on-premises/webhooks/components#messages_object)
      oneOf:
        - $ref: '#/components/schemas/Whatsapp_Text_Event'
        - $ref: '#/components/schemas/Whatsapp_Image_Event'
        - $ref: '#/components/schemas/Whatsapp_Audio_Event'
        - $ref: '#/components/schemas/Whatsapp_Document_Event'
        - $ref: '#/components/schemas/Whatsapp_Button_Event'
        - $ref: '#/components/schemas/Whatsapp_List_Event'
        - $ref: '#/components/schemas/Whatsapp_Order_Event'



    ##################################################
    # Google Business Messages objects
    ##################################################

    GbmMessage:
      description: >
        On Google Business Messages, a subset of the 
        [Message](https://developers.google.com/business-communications/business-messages/reference/rest/v1/conversations.messages#resource:-message) object
      type: object
      properties:
        text:
          description: Text message.
          type: string
        containsRichText:
          description:  >
            If true, indicates that the message contains 
            [rich text](https://developers.google.com/business-communications/business-messages/guides/build/send#rich_text).
          type: boolean

    GbmEvent:
      description: >
        On Google Business Messages, a subset of 
        [Text](https://developers.google.com/business-communications/business-messages/guides/build/receive#text) objects
      type: object
      properties:
        message:
          description: >
            A subset of
            [Message](https://developers.google.com/business-communications/business-messages/reference/rest/v1/Message) objects
          type: object
          properties:
            text:
              type: string

    ##################################################
    # Webchat Messages objects
    ##################################################

    WebchatText:
      type: object
      description: Text message
      properties:
        type:
          type: string
          enum: [text]
        datetime:
          type: string
          description: Datetime of the message
        text:
          type: object
          properties:
            content:
              description: Content of message
              type: string
              example: Hello

    WebchatImage:
      type: object
      description: Image message
      properties:
        type:
          type: string
          enum: [image]
        datetime:
            type: string
            description: Datetime of the message
        image:
          type: object
          properties:
            width:
              description: The width of the image
              type: integer
              example: 600
            height:
              description: The height of the image
              type: integer
              example: 326
            url:
              description: >
                A url which is valid only for a short amount of time (less than 60 seconds).
                If the callee wishes to access the content of the image, he should download
                the body of this url right away.
              type: string
              format: uri
              example: https://admin.alcmeon.com/2/temporary-public-files/55edf7a6-65c2-4c45-9aa2-ee206044e5ee?jwt=XXX

    WebchatButton:
      type: object
      description: Button clicked event
      properties:
        type:
          type: string
          enum: [ button ]
        datetime:
          type: string
          description: Datetime of the message
        button:
          type: object
          properties:
            name:
              description: Label that is displayed on the button
              type: string
              example: This is my store!
            payload:
              description: The payload associated with the button
              type: string
              example: 3917

    WebchatTextInputResponse:
      type: object
      description: User phone or email input
      properties:
        type:
          type: string
          enum: [ text_input_response ]
        datetime:
            type: string
            description: Datetime of the message
        text_input_response:
          type: object
          properties:
            type:
              type: string
              enum: [ phone, email ]
              description: The type field from the matching TextInput object
            content:
              type: string
              description: input value
              example: aaa@gmail.com
            payload:
              type: string
              description: Payload field from the matching TextInput object
              example: 3497

    WebchatPostback:
      type: object
      description: User clicked on a postback button
      properties:
        type:
          type: string
          enum: [ postback ]
        datetime:
          type: string
          description: Datetime of the message
        postback:
          type: object
          properties:
            payload:
              type: string
              description: The payload associated with the postback button displayed in the persistent menu

    WebChatMessage:
      description: >
        On WebChat, a subset of the
        [Message](https://docs.google.com/document/d/1cLUiM00Yd4Vw_EWkBmyMlmSfxAeKRJj1_1nRUJirgL0/edit?usp=sharing) object
      type: object
      properties:
        type:
          type: string
          enum: [text]
        text:
          type: object
          description: Send a text message back to the user.
          properties:
            type:
              type: string
              enum: [ text ]
            text:
              type: object
              properties:
                content:
                  description: Content of message
                  type: string
                  example: Hello
        buttons:
          type: array
          description: List of buttons displayed under message
          items:
            type: object
            properties:
              name:
                type: string
                description: label of button, displayed on screen
              payload:
                type: string
                description: arbitrary string hidden from the user, associated with button

    WebChatEvent:
      description: >
        On WebChat, a Message object
      oneOf:
        - $ref: '#/components/schemas/WebchatText'
        - $ref: '#/components/schemas/WebchatImage'
        - $ref: '#/components/schemas/WebchatButton'
        - $ref: '#/components/schemas/WebchatTextInputResponse'
        - $ref: '#/components/schemas/WebchatPostback'


security:
  - basic_auth: []

paths:

  /uploaded-tabular-data:
    get:
      servers:
        - url: https://api.alcmeon.com
          description: Host for tabular data
      tags:
        - Helpers
      summary: Return uploaded data
      description: >
        After a user successfully uploads excel data for a subbot (the data sheet formats
        have been validated against the format expected by the subbot), the data
        can be downloaded from the subbot by invoking this endpoint.

      responses:
        "200":
          description: Return a 200 status on success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TabularArrays'

  /continue:
    post:
      servers:
        - url: https://api.alcmeon.com
          description: Host to continue interactions with users
      tags:
        - Helpers
      summary: Continue interaction with user
      description: >
        If a subbot declares that it supports the v3 API in its
        /description endpoint, it will receive an extra key named
        jwt in its /start and /handle-event endpoints which can be
        used to authenticate this endpoint.
      parameters:
        - in: header
          name: X-JWT
          schema:
            type: string
            description: the JWT received in the /start and /handle-event event `jwt` field.
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BotResponse'
      responses:
        "200":
          description: Return a 200 status on success
  

  /description:
    get:
      tags:
        - Configuration
      summary: Describe configuration
      description: >
        Whenever a new bot box is added to a scenario, we `GET /description`
        to obtain a description of the bot output connectors, parameters, etc. 


        This endpoint can also be invoked at other times during the bot lifecycle. 

      responses:
        "200":
          description: >
            Return a 200 status to indicate that the data was received successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Description'

  /start:
    post:
      tags: 
        - Runtime
      summary: Handle first event
      description: >
        Whenever a user enters a box via its input connector, this endpoint will 
        be invoked via `POST URL/start`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Start_Event_Request'
      responses:
        "200":
          description: >
            Return a 200 status to indicate that the data was received successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotResponse'

  /handle-event:
    post:
      tags: 
        - Runtime
      summary: Handle other events
      description: >
        Whenever a user interacts with a bot box after entering via input 
        connector, this endpoint will be invoked via `POST URL/handle-event`.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Handle_Event_Request'
      responses:
        "200":
          description: >
            Return a 200 status to indicate that the data was received successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BotResponse'

  /end:
    post:
      tags: 
        - Runtime
      summary: Handle errors
      description: >
        `POST URL/end` is invoked whenever Alcméon thinks the bot box did something 
        wrong and took the “failed” output connector. It is not an error if it is 
        not implemented. Its return value is ignored.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_external_id:
                  type: string
                  description: The raw id of the user in the underlying social network API
      responses:
        "200":
          description: >
            Return a 200 status to indicate that the data was received successfully.
