openapi: 3.0.0
info:
  title: AI
  version: '1.0'
servers:
  - url: https://api.alcmeon.com
    description: Alcmeon production API server
x-readme:
  explorer-enabled: false

components:

  securitySchemes:
    basic_auth:
      description: >
        This is the default authentication schema for api.alcmeon.com.
        The username is your `company_id` (the id of your environment within Alcméon).
        The password is available from the _Applications_ configuration page within Alcméon.
      type: http
      scheme: basic

  schemas:
    ResponseError:
      type: object
      properties:
        error:
          type: string
          description: A short string explaining the reason of the error.
        details:
          type: string
          description: >
            A short string which describes what is wrong. Provide this string to 
            support@alcmeon.com if you wish to obtain more details about the problem.
    SuggestionFinished:
      required: [suggest_answer]
      properties:
        suggest_answer:
          type: object
          required: [id, answer, status]
          properties:
            id:
              type: string
              description: >
                A unique identifier of the generated suggestion.
            answer:
              type: string
              nullable: true
              description: >
                The generated response content to send to the support agent.
            status:
              type: string
              enum: [finished]
              description: >
                Status of the suggestion
                - Should be finished if suggestion was found
            created_at:
              type: string
              format: date-time
              nullable: true
              description: >
                The date of creation of suggestion.
            finished_at:
              type: string
              format: date-time
              nullable: true
              description: >
                The date of resolution of suggestion.
            knowledge_documents:
              type: array
              nullable: true
              description: >
                The knowledge documents used to generate the suggestion.
                It can be empty if no documents was used.
              items:
                type: object
                required:
                  - title
                properties:
                  title:
                    type: string
                    description: The tile of the knowledge document.
                  url:
                    type: string
                    format: date-time
                    description: The url of the knowledge document. It can be empty if the document doesn't have a public url (PDF, snippet...).
      example:
        suggest_answer:
          id: "1234"
          answer: "This is my answer"
          status: "finished"
          created_at: "2024-01-22 13:05:21"
          finished_at: "2024-01-22 13:05:41"
    SuggestionFailed:
      required: [suggest_answer]
      properties:
        suggest_answer:
          type: object
          required: [id, error, status]
          properties:
            id:
              type: string
              description: >
                A unique identifier of the generated suggestion.
            error:
              type: string
              nullable: true
              description: >
                The error to send to the support agent.
            status:
              type: string
              enum: [failed]
              description: >
                Status of the suggestion
                - Should be failed if suggestion could not be found
            created_at:
              type: string
              format: date-time
              nullable: true
              description: >
                The date of creation of suggestion.
            finished_at:
              type: string
              format: date-time
              nullable: true
              description: >
                The date of resolution of suggestion.            
      example:
        suggest_answer:
          id: "1234"
          error: "Can't generate answer"
          status: "failed"
          created_at: "2024-01-22 13:05:21"
          finished_at: "2024-01-22 13:05:41"

security:
  - basic_auth: []

paths:
  /ai/answer:
    post:
      summary: Send AI generated answer
      description: >
        Endpoint to invoke to send an AI generated answer to a social network user. 
        
        Once your AI API has been asynchronously called by Alcméon with a jwt specific for a given social network user, 
        this endpoint can be invoked (with the jwt previously received) to send the generated answer to this specific social network user.

      parameters:
        - in: header
          name: X-JWT
          schema:
            type: string
            description: The JWT received (e.g. the `jwt` field in the payload of the asynchronous request sent to your AI API). This JWT is valid for 60 seconds and you cannot reuse a JWT received for user A to send an AI generated answer to another user B.
          required: true
      requestBody:
        content:
          application/json:
            schema:
              required: [message]
              properties:
                message:
                  type: object
                  nullable: true
                  description: An object containing information about the generated answer.
                  properties:
                    id:
                      type: string
                      description: >
                        A unique identifier of the generated response.
                    content:
                      type: string
                      description: >
                        The generated response content to send to the social network user.
                    code:
                      type: string
                      enum: [suggestContactEscalation, mustContactEscalation, EndConversation]
                      nullable: true
                      description: >
                        An optional short string that can be filled to indicate that:
                        
                        - the generated answer can be sent but it's suggested to transfer the conversation afterwards to a support agent: `suggestContactEscalation` 
                        
                        - the generated answer should not be sent and the conversation afterwards should be transferred to a support agent: `mustContactEscalation`
                        
                        - the scope of the conversation can neither be handled by the AI nor by a support agent: `EndConversation`
                error:
                  type: object
                  nullable: true
                  description: Information on the response generation error when the AI did not manage to generate a satisfying answer.
                  properties:
                    code:
                      type: string
                      nullable: true
                      description: >
                        A short string code of the error.
                    details:
                      type: string
                      nullable: true
                      description: >
                        A short string explaining the reason of the error.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: ['ok']
        '400':
          description: If the token used to call the endpoint is not valid (or expired) or if the received json
                        does not match with the expected format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'

  /ai/suggest-answer:
    post:
      summary: Send AI generated suggestion
      description: >
        Endpoint to invoke to send an AI generated suggestion to a support agent. 
        
        Once your AI API has been asynchronously called by Alcméon with a webhook_token specific for a given conversation and support agent, 
        this endpoint can be invoked (with the token previously received) to send the generated answer to this specific agent.

      parameters:
        - in: header
          name: X-JWT
          schema:
            type: string
            description: The token received (e.g. the `webhook_token` field in the payload of the request sent to your AI API). This token is valid for 60 seconds and you cannot reuse a token received for user A to send an AI generated answer to another user B.
          required: true
      requestBody:
        content:
          application/json:
            schema:
              anyOf:
                - $ref: '#/components/schemas/SuggestionFinished'
                - $ref: '#/components/schemas/SuggestionFailed'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: ['ok']
        '400':
          description: If the token used to call the endpoint is not valid (or expired) or if the received json
                        does not match with the expected format.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseError'
