openapi: 3.0.0
servers:
  - url: https://api.alcmeon.com/
    description: Production api server

info:
  title: Alcméon User Provisionning API
  version: '1.0'

components:

  securitySchemes:
    basic_auth:
      description: >
        This is the default authentication schema for api.alcmeon.com.
        The username is your `company_id` (the id of your environment within Alcméon).
        The password is available from the _Applications_ configuration page within Alcméon.
      type: http
      scheme: basic

  schemas:
    Role:
      type: object
      properties:
        id:
          description: a unique id associated with a role
          type: integer
        name:
          description: the name associated with a role, displayed in the Alcméon user interface
          type: string

    Account:
      type: object
      properties:
        id:
          type: integer
          description: a unique id associated with a user
        email:
          type: string
          format: email
          description: the email associated with a user
        name:
          type: string
          description: the name associated with a user

    AnyValue:
      description: Can be any value - string, number, boolean, array or object.

    Error:
      type: object
      properties:
        error:
          description: details about what error happened
          type: object
          properties:
            reason:
              description: A text constant that describes the reason for the error
              type: string
            data:
              $ref: '#/components/schemas/AnyValue'
            error_message_translation_key:
              type: string
            error_message_place_holders:
              type: object
          

security:
  - basic_auth: []

paths:

  /roles:
    get:
      tags: 
        - User Account Provisioning
      summary: List roles
      description: >
        Return the list of roles that exist. Roles should be created, edited and named within
        the Alcméon user interface.
      responses:
        '200':
          description: Returned upon succes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'

  /accounts:
    post:
      tags:
        - User Account Provisioning
      summary: Create a user account
      description: >
        Create a new user account if it does not exist. Return an error otherwise.
        This user account is created with no roles assigned, and no password assigned:
        the user will be unable to login until the user goes through the process of
        choosing a password via the _I have forgotten my password_ link on the login page.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  description: The email to associate with the newly-created user
                  type: string
                  format: email
                name:
                  description: The name to associate with the newly-created user
                  type: string
      responses:
        '200':
          description: Returned upon succes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '400':
          description: If the input email is already associated with a user account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      tags:
        - User Account Provisioning
      summary: List user accounts
      description: >
        Return the list of either active or inactive users.
      parameters:
        - in: query
          name: is_active
          schema:
            type: boolean
          required: true
          description: Only active or inactive users are returned
      responses:
        '200':
          description: Returned upon succes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
        '400':
          description: If the input email is already associated with a user account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /accounts/{account_id}:
    post:
      tags:
        - User Account Provisioning
      summary: Update a user account
      description: >
        This endpoint makes it possible to:

          - Reset the list of roles associated with an account. 
          - Deactivate or Activate an account
      parameters:
        - in: path
          name: account_id
          schema:
            type: integer
          required: true
          description: Numeric ID of the account to update
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                roles:
                  description: >
                    The list of role ids we want to assign to a user account
                    Setting an empty list of roles will remove all permissions from the user.
                  type: array
                  items:
                    type: integer
                is_active:
                  description: >
                    Set to ``true`` to enable a user account. ``false`` to disable
                    this user account.


                    Disabled accounts are not able to login anymore, regardless
                    of what the SSO might say about the status of the user account.
                  type: boolean
              
      responses:
        '200':
          description: Returned upon succes
        '400':
          description: If the account_id or one of the input role id is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
